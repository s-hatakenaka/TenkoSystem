{"remainingRequest":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\NiukeMonitorList.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\NiukeMonitorList.vue","mtime":1603716298000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1603716288000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716210000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716292000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport KeyboardEvents from '@/components/KeyboardEvents.vue';\nimport ElIncrementSearch from '@/components/IncrementSearch.vue';\nimport config from '@/config.js';\nimport url from '@/js/api_url.js';\nimport time from '@/js/status/time.js';\nexport default {\n  name: 'niukeMonitorList',\n  components: {\n    KeyboardEvents: KeyboardEvents,\n    ElIncrementSearch: ElIncrementSearch\n  },\n  data: function data() {\n    return {\n      data: {\n        form: {\n          model: {\n            kaisu: \"\",\n            niukeDateStart: \"\",\n            niukeDateEnd: \"\",\n            inputDateStart: \"\",\n            inputDateEnd: \"\",\n            seisansyaCodeTop: 9999,\n            seisansyaCodeBottom: 0\n          },\n          validation: {\n            kaisu: [{\n              required: true,\n              message: '回数が入力されていません',\n              trigger: 'blur'\n            }],\n            niukeDateStart: [{\n              required: true,\n              message: '荷受日付が入力されていません',\n              trigger: 'blur'\n            }, {\n              validator: this.validateniukeDate,\n              trigger: 'blur'\n            }],\n            niukeDateEnd: [{\n              required: true,\n              message: '荷受日付が入力されていません',\n              trigger: 'blur'\n            }, {\n              validator: this.validateniukeDate,\n              trigger: 'blur'\n            }],\n            inputDateStart: [{\n              required: true,\n              message: '入力日付が入力されていません',\n              trigger: 'blur'\n            }, {\n              validator: this.validateinputDate,\n              trigger: 'blur'\n            }],\n            inputDateEnd: [{\n              required: true,\n              message: '入力日付が入力されていません',\n              trigger: 'blur'\n            }, {\n              validator: this.validateinputDate,\n              trigger: 'blur'\n            }],\n            seisansyaCodeBottom: [{\n              required: true,\n              message: '生産者コードが入力されていません',\n              trigger: 'blur'\n            }],\n            seisansyaCodeTop: [{\n              required: true,\n              message: '生産者コードが入力されていません',\n              trigger: 'blur'\n            }]\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    keyboardEvent: function keyboardEvent(e) {\n      if (e.keyCode == config.KEY_CODES.F10) {\n        this.print();\n      }\n\n      if (e.keyCode == config.KEY_CODES.F11) {\n        this.confirm();\n      }\n\n      if (e.keyCode == config.KEY_CODES.F12) {\n        this.finish();\n      }\n    },\n    validateniukeDate: function validateniukeDate(rule, value, callback) {\n      var model = this.data.form.model;\n\n      if (!time.compareDate(model.niukeDateStart, model.niukeDateEnd)) {\n        callback(new Error('日付の上下関係に誤りがあります'));\n      } else {\n        callback();\n      }\n    },\n    validateinputDate: function validateinputDate(rule, value, callback) {\n      var model = this.data.form.model;\n\n      if (!time.compareDate(model.inputDateStart, model.inputDateEnd)) {\n        callback(new Error('日付の上下関係に誤りがあります'));\n      } else {\n        callback();\n      }\n    },\n    createPostArray: function createPostArray(print_flag) {\n      var model = this.data.form.model;\n      var niukeDateStart_ = model.niukeDateStart.split(\"-\");\n      var niukeDateStart = String(niukeDateStart_[0] + niukeDateStart_[1] + niukeDateStart_[2]);\n      var niukeDateEnd_ = model.niukeDateEnd.split(\"-\");\n      var niukeDateEnd = String(niukeDateEnd_[0] + niukeDateEnd_[1] + niukeDateEnd_[2]);\n      var inputDateStart_ = model.inputDateStart.split(\"-\");\n      var inputDateStart = String(inputDateStart_[0] + inputDateStart_[1] + inputDateStart_[2]);\n      var inputDateEnd_ = model.inputDateEnd.split(\"-\");\n      var inputDateEnd = String(inputDateEnd_[0] + inputDateEnd_[1] + inputDateEnd_[2]);\n      return {\n        \"kaisu\": model.kaisu,\n        \"niukeDATEdown\": niukeDateStart,\n        \"niukeDATEup\": niukeDateEnd,\n        \"inputDATEdown\": inputDateStart,\n        \"inputDATEup\": inputDateEnd,\n        \"seisansyaCDdown\": model.seisansyaCodeBottom,\n        \"seisansyaCDup\": model.seisansyaCodeTop,\n        \"PrintFlg\": print_flag\n      };\n    },\n    print: function print() {\n      var _this = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          var postArray = _this.createPostArray(true);\n\n          axios.post(url.niukeMonitorList, postArray).then(function (response) {\n            console.log(response.data);\n\n            if (response.data.url == undefined) {\n              alert(\"データが無い又はデータが多すぎます\");\n            } else {\n              window.open(response.data.url);\n            }\n          }).catch(function (response) {\n            return console.log(response);\n          });\n        }\n      });\n    },\n    confirm: function confirm() {\n      var _this2 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          axios.post(url.niukeMonitorList, _this2.createPostArray(false)).then(function (response) {\n            console.log(response.data);\n            window.open(response.data.url);\n          }).catch(function (response) {\n            return console.log(response);\n          });\n        }\n      });\n    },\n    finish: function finish() {\n      this.$router.push('/hoshigaki/');\n    }\n  },\n  created: function created() {\n    this.data.form.model.niukeDateStart = time.nowJapanDateInput();\n    this.data.form.model.niukeDateEnd = time.nowJapanDateInput();\n    this.data.form.model.inputDateStart = time.nowJapanDateInput();\n    this.data.form.model.inputDateEnd = time.nowJapanDateInput();\n  }\n};",{"version":3,"sources":["NiukeMonitorList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA,OAAA,cAAA,MAAA,iCAAA;AACA,OAAA,iBAAA,MAAA,kCAAA;AACA,OAAA,MAAA,MAAA,aAAA;AACA,OAAA,GAAA,MAAA,iBAAA;AACA,OAAA,IAAA,MAAA,qBAAA;AAGA,eAAA;AACA,QAAA,kBADA;AAEA,cAAA;AACA,kCADA;AACA;AADA,GAFA;AAKA,QAAA,gBAAA;AACA,WAAA;AACA,YAAA;AACA,cAAA;AACA,iBAAA;AACA,mBAAA,EADA;AAEA,4BAAA,EAFA;AAGA,0BAAA,EAHA;AAIA,4BAAA,EAJA;AAKA,0BAAA,EALA;AAMA,8BAAA,IANA;AAOA,iCAAA;AAPA,WADA;AAUA,sBAAA;AACA,mBAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,cAAA;AAAA,uBAAA;AAAA,aADA,CADA;AAIA,4BAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,gBAAA;AAAA,uBAAA;AAAA,aADA,EAEA;AAAA,yBAAA,KAAA,iBAAA;AAAA,uBAAA;AAAA,aAFA,CAJA;AAQA,0BAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,gBAAA;AAAA,uBAAA;AAAA,aADA,EAEA;AAAA,yBAAA,KAAA,iBAAA;AAAA,uBAAA;AAAA,aAFA,CARA;AAYA,4BAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,gBAAA;AAAA,uBAAA;AAAA,aADA,EAEA;AAAA,yBAAA,KAAA,iBAAA;AAAA,uBAAA;AAAA,aAFA,CAZA;AAgBA,0BAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,gBAAA;AAAA,uBAAA;AAAA,aADA,EAEA;AAAA,yBAAA,KAAA,iBAAA;AAAA,uBAAA;AAAA,aAFA,CAhBA;AAoBA,iCAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,kBAAA;AAAA,uBAAA;AAAA,aADA,CApBA;AAwBA,8BAAA,CACA;AAAA,wBAAA,IAAA;AAAA,uBAAA,kBAAA;AAAA,uBAAA;AAAA,aADA;AAxBA;AAVA;AADA;AADA,KAAA;AA4CA,GAlDA;AAmDA,WAAA;AACA,iBADA,yBACA,CADA,EACA;AACA,UAAA,EAAA,OAAA,IAAA,OAAA,SAAA,CAAA,GAAA,EAAA;AACA,aAAA,KAAA;AACA;;AACA,UAAA,EAAA,OAAA,IAAA,OAAA,SAAA,CAAA,GAAA,EAAA;AACA,aAAA,OAAA;AACA;;AACA,UAAA,EAAA,OAAA,IAAA,OAAA,SAAA,CAAA,GAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA,KAXA;AAYA,uBAAA,2BAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,QAAA,KAAA,IAAA,CAAA,IAAA,CAAA,KAAA;;AACA,UAAA,CAAA,KAAA,WAAA,CAAA,MAAA,cAAA,EAAA,MAAA,YAAA,CAAA,EAAA;AACA,iBAAA,IAAA,KAAA,CAAA,iBAAA,CAAA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAnBA;AAoBA,uBAAA,2BAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,QAAA,KAAA,IAAA,CAAA,IAAA,CAAA,KAAA;;AACA,UAAA,CAAA,KAAA,WAAA,CAAA,MAAA,cAAA,EAAA,MAAA,YAAA,CAAA,EAAA;AACA,iBAAA,IAAA,KAAA,CAAA,iBAAA,CAAA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA3BA;AA4BA,qBAAA,yBAAA,UAAA,EAAA;AACA,UAAA,QAAA,KAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AAEA,UAAA,kBAAA,MAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,UAAA,iBAAA,OAAA,gBAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;AACA,UAAA,gBAAA,MAAA,YAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,UAAA,eAAA,OAAA,cAAA,CAAA,IAAA,cAAA,CAAA,CAAA,GAAA,cAAA,CAAA,CAAA,CAAA;AAEA,UAAA,kBAAA,MAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,UAAA,iBAAA,OAAA,gBAAA,CAAA,IAAA,gBAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;AACA,UAAA,gBAAA,MAAA,YAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,UAAA,eAAA,OAAA,cAAA,CAAA,IAAA,cAAA,CAAA,CAAA,GAAA,cAAA,CAAA,CAAA,CAAA;AAGA,aAAA;AACA,iBAAA,MAAA,KADA;AAEA,yBAAA,cAFA;AAGA,uBAAA,YAHA;AAIA,yBAAA,cAJA;AAKA,uBAAA,YALA;AAMA,2BAAA,MAAA,mBANA;AAOA,yBAAA,MAAA,gBAPA;AAQA,oBAAA;AARA,OAAA;AAaA,KAvDA;AAwDA,WAAA,iBAAA;AAAA;;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,YAAA,MAAA,eAAA,CAAA,IAAA,CAAA;;AAEA,gBAAA,IAAA,CAAA,IAAA,gBAAA,EAAA,SAAA,EACA,IADA,CACA,oBAAA;AACA,oBAAA,GAAA,CAAA,SAAA,IAAA;;AACA,gBAAA,SAAA,IAAA,CAAA,GAAA,IAAA,SAAA,EAAA;AACA,oBAAA,mBAAA;AACA,aAFA,MAEA;AAEA,qBAAA,IAAA,CAAA,SAAA,IAAA,CAAA,GAAA;AAEA;AACA,WAVA,EAWA,KAXA,CAWA;AAAA,mBAAA,QAAA,GAAA,CAAA,QAAA,CAAA;AAAA,WAXA;AAaA;AAEA,OApBA;AAqBA,KA9EA;AA+EA,aAAA,mBAAA;AAAA;;AAEA,WAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AAEA,YAAA,KAAA,EAAA;AAEA,gBAAA,IAAA,CAAA,IAAA,gBAAA,EAAA,OAAA,eAAA,CAAA,KAAA,CAAA,EACA,IADA,CACA,oBAAA;AACA,oBAAA,GAAA,CAAA,SAAA,IAAA;AACA,mBAAA,IAAA,CAAA,SAAA,IAAA,CAAA,GAAA;AACA,WAJA,EAKA,KALA,CAKA;AAAA,mBAAA,QAAA,GAAA,CAAA,QAAA,CAAA;AAAA,WALA;AAOA;AAEA,OAbA;AAcA,KA/FA;AAgGA,YAAA,kBAAA;AAEA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AAEA;AApGA,GAnDA;AAyJA,WAAA,mBAAA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,GAAA,KAAA,iBAAA,EAAA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,YAAA,GAAA,KAAA,iBAAA,EAAA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,cAAA,GAAA,KAAA,iBAAA,EAAA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,YAAA,GAAA,KAAA,iBAAA,EAAA;AAGA;AAhKA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>荷受モニターリスト</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.form.model\" :rules=\"data.form.validation\" ref=\"form\" label-width=\"120px\">\r\n                    <div class='row'>\r\n                        <div class='col-md-12'>\r\n                            <label for='回数' class='col-form-label px-1' style='width:100%;'>回数</label>\r\n                            <el-form-item label-width=\"0\" prop=\"kaisu\">\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.kaisu\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12'>\r\n                            <label for='荷受日付' class='col-form-label px-1' style='width:100%;'>荷受日付</label>\r\n                            <el-form-item label-width=\"0\" prop=\"niukeDateStart\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.niukeDateStart'></el-input>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"niukeDateEnd\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.niukeDateEnd'></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12'>\r\n                            <label for='入力日付' class='col-form-label px-1' style='width:100%;'>入力日付</label>\r\n                            <el-form-item label-width=\"0\" prop=\"inputDateStart\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.inputDateStart'></el-input>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"inputDateEnd\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.inputDateEnd'></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class='row'>\r\n                        <div class='col-md-8'>\r\n                            <label for='生産者' class='col-form-label px-1' style='width:100%;'>生産者コード</label>\r\n                            <el-form-item label-width=\"0\" prop=\"seisansyaCodeBottom\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.seisansyaCodeBottom\"\r\n                                                 style=\"width:100%;display:block;\"\r\n                                                 :max=\"data.form.model.seisansyaCodeTop\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"seisansyaCodeTop\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.seisansyaCodeTop\"\r\n                                                 style=\"width:100%;display:block;\"\r\n                                                 :min=\"data.form.model.seisansyaCodeBottom\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class='row' style=\"margin-top:2%;\">\r\n                        <div class='col-md-12'>\r\n                            <div style='text-align:right;width:100%;'>\r\n                                <el-button style='margin-left:2%;' type='primary' v-on:click=\"print\">印刷(F10)</el-button>\r\n                                <el-button style='margin-left:2%;' type='success' v-on:click=\"confirm\">表示(F11)</el-button>\r\n                                <el-button style='margin-left:2%;' type='warning' v-on:click=\"finish\">終了(F12)</el-button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </el-form>\r\n\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import ElIncrementSearch from '@/components/IncrementSearch.vue'\r\n    import config from '@/config.js'\r\n    import url from '@/js/api_url.js'\r\n    import time from '@/js/status/time.js'\r\n\r\n\r\n    export default {\r\n        name: 'niukeMonitorList',\r\n        components: {\r\n            KeyboardEvents, ElIncrementSearch\r\n        },\r\n        data: function () {\r\n            return {\r\n                data: {\r\n                    form: {\r\n                        model: {\r\n                            kaisu: \"\",\r\n                            niukeDateStart: \"\",\r\n                            niukeDateEnd: \"\",\r\n                            inputDateStart: \"\",\r\n                            inputDateEnd: \"\",\r\n                            seisansyaCodeTop: 9999,\r\n                            seisansyaCodeBottom: 0,\r\n                        },\r\n                        validation: {\r\n                            kaisu: [\r\n                                { required: true, message: '回数が入力されていません', trigger: 'blur' },\r\n                            ],\r\n                            niukeDateStart: [\r\n                                { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateniukeDate, trigger: 'blur' }\r\n                            ],\r\n                            niukeDateEnd: [\r\n                                { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateniukeDate, trigger: 'blur' }\r\n                            ],\r\n                            inputDateStart: [\r\n                                { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateinputDate, trigger: 'blur' }\r\n                            ],\r\n                            inputDateEnd: [\r\n                                { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateinputDate, trigger: 'blur' }\r\n                            ],\r\n                            seisansyaCodeBottom: [\r\n                                { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\r\n\r\n                            ],\r\n                            seisansyaCodeTop: [\r\n                                { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\r\n\r\n                            ],\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F10) {\r\n                    this.print()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F11) {\r\n                    this.confirm()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            validateniukeDate: function (rule, value, callback) {\r\n                var model = this.data.form.model\r\n                if (!time.compareDate(model.niukeDateStart, model.niukeDateEnd)) {\r\n                    callback(new Error('日付の上下関係に誤りがあります'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            validateinputDate: function (rule, value, callback) {\r\n                var model = this.data.form.model\r\n                if (!time.compareDate(model.inputDateStart, model.inputDateEnd)) {\r\n                    callback(new Error('日付の上下関係に誤りがあります'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            createPostArray: function (print_flag) {\r\n                var model = this.data.form.model;\r\n\r\n                var niukeDateStart_ = model.niukeDateStart.split(\"-\");\r\n                var niukeDateStart = String(niukeDateStart_[0] + niukeDateStart_[1] + niukeDateStart_[2]);\r\n                var niukeDateEnd_ = model.niukeDateEnd.split(\"-\");\r\n                var niukeDateEnd = String(niukeDateEnd_[0] + niukeDateEnd_[1] + niukeDateEnd_[2]);\r\n\r\n                var inputDateStart_ = model.inputDateStart.split(\"-\");\r\n                var inputDateStart = String(inputDateStart_[0] + inputDateStart_[1] + inputDateStart_[2]);\r\n                var inputDateEnd_ = model.inputDateEnd.split(\"-\");\r\n                var inputDateEnd = String(inputDateEnd_[0] + inputDateEnd_[1] + inputDateEnd_[2]);\r\n\r\n\r\n                return {\r\n                    \"kaisu\": model.kaisu,\r\n                    \"niukeDATEdown\": niukeDateStart,\r\n                    \"niukeDATEup\": niukeDateEnd,\r\n                    \"inputDATEdown\": inputDateStart,\r\n                    \"inputDATEup\": inputDateEnd,\r\n                    \"seisansyaCDdown\": model.seisansyaCodeBottom,\r\n                    \"seisansyaCDup\": model.seisansyaCodeTop,\r\n                    \"PrintFlg\": print_flag,\r\n                };\r\n      \r\n\r\n\r\n            },\r\n            print: function () {\r\n                this.$refs['form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n                        var postArray = this.createPostArray(true);\r\n\r\n                        axios.post(url.niukeMonitorList, postArray)\r\n                            .then(response => {\r\n                                console.log(response.data);\r\n                                if (response.data.url == undefined) {\r\n                                    alert(\"データが無い又はデータが多すぎます\");\r\n                                } else {\r\n\r\n                                    window.open(response.data.url);\r\n\r\n                                }\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n\r\n                });\r\n            },\r\n            confirm: function () {\r\n\r\n                this.$refs['form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        axios.post(url.niukeMonitorList, this.createPostArray(false))\r\n                            .then(response => {\r\n                                console.log(response.data);\r\n                                window.open(response.data.url);\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n\r\n                });\r\n             },\r\n            finish: function () {\r\n\r\n              this.$router.push('/hoshigaki/');  \r\n\r\n            }\r\n        },\r\n        created: function () {\r\n            this.data.form.model.niukeDateStart = time.nowJapanDateInput();\r\n            this.data.form.model.niukeDateEnd = time.nowJapanDateInput();\r\n            this.data.form.model.inputDateStart = time.nowJapanDateInput();\r\n            this.data.form.model.inputDateEnd = time.nowJapanDateInput();\r\n\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n\\"],"sourceRoot":"src/pages"}]}