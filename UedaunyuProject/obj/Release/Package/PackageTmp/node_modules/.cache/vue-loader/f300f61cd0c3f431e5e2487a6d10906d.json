{"remainingRequest":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\TokyugaiDataIkkatsuHenkou.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\TokyugaiDataIkkatsuHenkou.vue","mtime":1603716296650},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716209870},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716290397}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport Card from '@/components/Card/Card.vue'\nimport KeyboardEvents from '@/components/KeyboardEvents.vue'\nimport config from '@/config.js'\nimport time from '@/js/status/time.js'\n\n\nexport default {\n    name: 'niukeSyukei',\n    components: {\n        Card, KeyboardEvents\n    },\n    data: function () {\n        return {\n            //端末番号持ってくる\n            //methodsで使う際のnodeをmountedで登録し、取得する手間を省く\n            element: {\n                syoriKubun: null,\n                niukeNyuryokuForm: null,\n            },\n            data: {\n                model: {\n                    year: null,\n                    kaisu: null,\n                },\n                transactions: \"\",\n                validation: {\n                    year: [\n                        { required: true, message: '年度が入力されていません', trigger: 'blur' },\n                    ],\n                    kaisu: [\n                        { required: true, message: '変更前回数が入力されていません', trigger: 'blur' },\n                    ]\n                },\n                tokyu: [\n                ],\n\n            },\n        }\n    },\n    methods: {\n        keyboardEvent(e) {\n            if (e.keyCode == config.KEY_CODES.F9) {\n                this.submit()\n            }\n            if (e.keyCode == config.KEY_CODES.F12) {\n                this.finish()\n            }\n        },\n        finish: function () {\n            alert(\"終了\");\n        },\n        submit: function () {\n\n\n            this.$refs['Form'].validate((valid) => {\n\n                if (valid) {\n\n                    if (!window.confirm(\"回数変更を行います。よろしいですか？\")) {\n\n                        return false;\n                    }\n\n                    //※ここでaxiosでpostする\n                    alert(\"実行\")\n                  \n                }\n            });\n\n\n\n        },\n    },\n    created: function () {\n\n        //※データを取ってくる\n        this.data.model.year = 2022;\n        this.data.tokyu = [\n            { tokyuCD: \"11\", tokyumei: \"特上\", kaisu: 2 },\n            { tokyuCD: \"12\", tokyumei: \"上\", kaisu: 3 },\n            { tokyuCD: \"13\", tokyumei: \"普通\", kaisu: 4 },\n            { tokyuCD: \"14\", tokyumei: \"下\", kaisu: 5 },\n            { tokyuCD: \"15\", tokyumei: \"特下\", kaisu: 6 },\n        ]\n    },\n    mounted: function () {\n\n    },\n\n}\n",{"version":3,"sources":["TokyugaiDataIkkatsuHenkou.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"TokyugaiDataIkkatsuHenkou.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>等級外データ一括変更</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.model\" :rules=\"data.validation\" ref=\"Form\" label-width=\"120px\">\r\n                    <div class='row'>\r\n                        <div class='col-md-6'>\r\n                            <label for='年度' class='col-form-label px-1' style=\"width:100%;\">年度</label>\r\n                            <el-form-item label-width=\"0\" prop=\"year\">\r\n                                <el-input-number type='text'\r\n                                                 controls-position=\"right\"\r\n                                                 style='width:80%;margin-right:2%;'\r\n                                                 v-model=\"data.model.year\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <h2 style=\"background-color:red;font-weight:bold;\">\r\n                               実行前にデータを保存してください \r\n                            </h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class='row'>\r\n                        <div class='col-md-6'>\r\n                            <label for='変更前回数' class='col-form-label px-1' style=\"width:100%;\">変更前回数</label>\r\n                            <el-form-item label-width=\"0\" prop=\"kaisu\">\r\n                                <el-input-number type='text'\r\n                                                 controls-position=\"right\"\r\n                                                 style='width:80%;margin-right:2%;'\r\n                                                 v-model=\"data.model.kaisu\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                </el-form>\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                        <table class=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>等級</th>\r\n                                    <th>等級名</th>\r\n                                    <th></th>\r\n                                    <th>変更後の回数</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"tokyu in data.tokyu\">\r\n                                    <!--※ここは生データを取ってきたら変える-->\r\n                                    <td>\r\n                                        {{tokyu.tokyuCD}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{tokyu.tokyumei}}\r\n                                    </td>\r\n                                    <td>\r\n                                        ⇒\r\n                                    </td>\r\n                                    <td>\r\n                                        {{tokyu.kaisu}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <p style=\"color:blue;font-weight:bold;\">\r\n                            等級外の荷受データ、在庫データの回数を<br/>「変更後の回数」に変更します\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div style='text-align:right;width:100%;'>\r\n                            <el-button style='margin-left:2%;' type='primary' v-on:click=\"submit\">実行(F9)</el-button>\r\n                            <el-button type='success' v-on:click=\"finish\">終了(F12)</el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import Card from '@/components/Card/Card.vue'\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import config from '@/config.js'\r\n    import time from '@/js/status/time.js'\r\n\r\n\r\n    export default {\r\n        name: 'niukeSyukei',\r\n        components: {\r\n            Card, KeyboardEvents\r\n        },\r\n        data: function () {\r\n            return {\r\n                //端末番号持ってくる\r\n                //methodsで使う際のnodeをmountedで登録し、取得する手間を省く\r\n                element: {\r\n                    syoriKubun: null,\r\n                    niukeNyuryokuForm: null,\r\n                },\r\n                data: {\r\n                    model: {\r\n                        year: null,\r\n                        kaisu: null,\r\n                    },\r\n                    transactions: \"\",\r\n                    validation: {\r\n                        year: [\r\n                            { required: true, message: '年度が入力されていません', trigger: 'blur' },\r\n                        ],\r\n                        kaisu: [\r\n                            { required: true, message: '変更前回数が入力されていません', trigger: 'blur' },\r\n                        ]\r\n                    },\r\n                    tokyu: [\r\n                    ],\r\n\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F9) {\r\n                    this.submit()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            finish: function () {\r\n                alert(\"終了\");\r\n            },\r\n            submit: function () {\r\n\r\n\r\n                this.$refs['Form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        if (!window.confirm(\"回数変更を行います。よろしいですか？\")) {\r\n\r\n                            return false;\r\n                        }\r\n\r\n                        //※ここでaxiosでpostする\r\n                        alert(\"実行\")\r\n                      \r\n                    }\r\n                });\r\n\r\n\r\n\r\n            },\r\n        },\r\n        created: function () {\r\n\r\n            //※データを取ってくる\r\n            this.data.model.year = 2022;\r\n            this.data.tokyu = [\r\n                { tokyuCD: \"11\", tokyumei: \"特上\", kaisu: 2 },\r\n                { tokyuCD: \"12\", tokyumei: \"上\", kaisu: 3 },\r\n                { tokyuCD: \"13\", tokyumei: \"普通\", kaisu: 4 },\r\n                { tokyuCD: \"14\", tokyumei: \"下\", kaisu: 5 },\r\n                { tokyuCD: \"15\", tokyumei: \"特下\", kaisu: 6 },\r\n            ]\r\n        },\r\n        mounted: function () {\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n"]}]}