{"remainingRequest":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\NiukeMonitorList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\NiukeMonitorList.vue","mtime":1603716296588},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716209870},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716290397}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport KeyboardEvents from '@/components/KeyboardEvents.vue'\nimport ElIncrementSearch from '@/components/IncrementSearch.vue'\nimport config from '@/config.js'\nimport url from '@/js/api_url.js'\nimport time from '@/js/status/time.js'\n\n\nexport default {\n    name: 'niukeMonitorList',\n    components: {\n        KeyboardEvents, ElIncrementSearch\n    },\n    data: function () {\n        return {\n            data: {\n                form: {\n                    model: {\n                        kaisu: \"\",\n                        niukeDateStart: \"\",\n                        niukeDateEnd: \"\",\n                        inputDateStart: \"\",\n                        inputDateEnd: \"\",\n                        seisansyaCodeTop: 9999,\n                        seisansyaCodeBottom: 0,\n                    },\n                    validation: {\n                        kaisu: [\n                            { required: true, message: '回数が入力されていません', trigger: 'blur' },\n                        ],\n                        niukeDateStart: [\n                            { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\n                            { validator: this.validateniukeDate, trigger: 'blur' }\n                        ],\n                        niukeDateEnd: [\n                            { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\n                            { validator: this.validateniukeDate, trigger: 'blur' }\n                        ],\n                        inputDateStart: [\n                            { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\n                            { validator: this.validateinputDate, trigger: 'blur' }\n                        ],\n                        inputDateEnd: [\n                            { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\n                            { validator: this.validateinputDate, trigger: 'blur' }\n                        ],\n                        seisansyaCodeBottom: [\n                            { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\n\n                        ],\n                        seisansyaCodeTop: [\n                            { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\n\n                        ],\n                    },\n                },\n            },\n        }\n    },\n    methods: {\n        keyboardEvent(e) {\n            if (e.keyCode == config.KEY_CODES.F10) {\n                this.print()\n            }\n            if (e.keyCode == config.KEY_CODES.F11) {\n                this.confirm()\n            }\n            if (e.keyCode == config.KEY_CODES.F12) {\n                this.finish()\n            }\n        },\n        validateniukeDate: function (rule, value, callback) {\n            var model = this.data.form.model\n            if (!time.compareDate(model.niukeDateStart, model.niukeDateEnd)) {\n                callback(new Error('日付の上下関係に誤りがあります'));\n            } else {\n                callback();\n            }\n        },\n        validateinputDate: function (rule, value, callback) {\n            var model = this.data.form.model\n            if (!time.compareDate(model.inputDateStart, model.inputDateEnd)) {\n                callback(new Error('日付の上下関係に誤りがあります'));\n            } else {\n                callback();\n            }\n        },\n        createPostArray: function (print_flag) {\n            var model = this.data.form.model;\n\n            var niukeDateStart_ = model.niukeDateStart.split(\"-\");\n            var niukeDateStart = String(niukeDateStart_[0] + niukeDateStart_[1] + niukeDateStart_[2]);\n            var niukeDateEnd_ = model.niukeDateEnd.split(\"-\");\n            var niukeDateEnd = String(niukeDateEnd_[0] + niukeDateEnd_[1] + niukeDateEnd_[2]);\n\n            var inputDateStart_ = model.inputDateStart.split(\"-\");\n            var inputDateStart = String(inputDateStart_[0] + inputDateStart_[1] + inputDateStart_[2]);\n            var inputDateEnd_ = model.inputDateEnd.split(\"-\");\n            var inputDateEnd = String(inputDateEnd_[0] + inputDateEnd_[1] + inputDateEnd_[2]);\n\n\n            return {\n                \"kaisu\": model.kaisu,\n                \"niukeDATEdown\": niukeDateStart,\n                \"niukeDATEup\": niukeDateEnd,\n                \"inputDATEdown\": inputDateStart,\n                \"inputDATEup\": inputDateEnd,\n                \"seisansyaCDdown\": model.seisansyaCodeBottom,\n                \"seisansyaCDup\": model.seisansyaCodeTop,\n                \"PrintFlg\": print_flag,\n            };\n  \n\n\n        },\n        print: function () {\n            this.$refs['form'].validate((valid) => {\n\n                if (valid) {\n                    var postArray = this.createPostArray(true);\n\n                    axios.post(url.niukeMonitorList, postArray)\n                        .then(response => {\n                            console.log(response.data);\n                            if (response.data.url == undefined) {\n                                alert(\"データが無い又はデータが多すぎます\");\n                            } else {\n\n                                window.open(response.data.url);\n\n                            }\n                        })\n                        .catch(response => console.log(response))\n\n                }\n\n            });\n        },\n        confirm: function () {\n\n            this.$refs['form'].validate((valid) => {\n\n                if (valid) {\n\n                    axios.post(url.niukeMonitorList, this.createPostArray(false))\n                        .then(response => {\n                            console.log(response.data);\n                            window.open(response.data.url);\n                        })\n                        .catch(response => console.log(response))\n\n                }\n\n            });\n         },\n        finish: function () {\n\n          this.$router.push('/hoshigaki/');  \n\n        }\n    },\n    created: function () {\n        this.data.form.model.niukeDateStart = time.nowJapanDateInput();\n        this.data.form.model.niukeDateEnd = time.nowJapanDateInput();\n        this.data.form.model.inputDateStart = time.nowJapanDateInput();\n        this.data.form.model.inputDateEnd = time.nowJapanDateInput();\n\n\n    }\n\n}\n",{"version":3,"sources":["NiukeMonitorList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"NiukeMonitorList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>荷受モニターリスト</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.form.model\" :rules=\"data.form.validation\" ref=\"form\" label-width=\"120px\">\r\n                    <div class='row'>\r\n                        <div class='col-md-12'>\r\n                            <label for='回数' class='col-form-label px-1' style='width:100%;'>回数</label>\r\n                            <el-form-item label-width=\"0\" prop=\"kaisu\">\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.kaisu\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12'>\r\n                            <label for='荷受日付' class='col-form-label px-1' style='width:100%;'>荷受日付</label>\r\n                            <el-form-item label-width=\"0\" prop=\"niukeDateStart\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.niukeDateStart'></el-input>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"niukeDateEnd\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.niukeDateEnd'></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12'>\r\n                            <label for='入力日付' class='col-form-label px-1' style='width:100%;'>入力日付</label>\r\n                            <el-form-item label-width=\"0\" prop=\"inputDateStart\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.inputDateStart'></el-input>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"inputDateEnd\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n\r\n                                <el-input type='date'\r\n                                          style=\"width:100%;display:block;\"\r\n                                          v-model='data.form.model.inputDateEnd'></el-input>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class='row'>\r\n                        <div class='col-md-8'>\r\n                            <label for='生産者' class='col-form-label px-1' style='width:100%;'>生産者コード</label>\r\n                            <el-form-item label-width=\"0\" prop=\"seisansyaCodeBottom\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.seisansyaCodeBottom\"\r\n                                                 style=\"width:100%;display:block;\"\r\n                                                 :max=\"data.form.model.seisansyaCodeTop\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%;'>～</span>\r\n                            <el-form-item label-width=\"0\" prop=\"seisansyaCodeTop\" style='width:40%;margin-right:2%;display:inline-block;'>\r\n                                <el-input-number name=\"name\"\r\n                                                 v-model=\"data.form.model.seisansyaCodeTop\"\r\n                                                 style=\"width:100%;display:block;\"\r\n                                                 :min=\"data.form.model.seisansyaCodeBottom\"\r\n                                                 controls-position=\"right\"></el-input-number>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n                    <div class='row' style=\"margin-top:2%;\">\r\n                        <div class='col-md-12'>\r\n                            <div style='text-align:right;width:100%;'>\r\n                                <el-button style='margin-left:2%;' type='primary' v-on:click=\"print\">印刷(F10)</el-button>\r\n                                <el-button style='margin-left:2%;' type='success' v-on:click=\"confirm\">表示(F11)</el-button>\r\n                                <el-button style='margin-left:2%;' type='warning' v-on:click=\"finish\">終了(F12)</el-button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </el-form>\r\n\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import ElIncrementSearch from '@/components/IncrementSearch.vue'\r\n    import config from '@/config.js'\r\n    import url from '@/js/api_url.js'\r\n    import time from '@/js/status/time.js'\r\n\r\n\r\n    export default {\r\n        name: 'niukeMonitorList',\r\n        components: {\r\n            KeyboardEvents, ElIncrementSearch\r\n        },\r\n        data: function () {\r\n            return {\r\n                data: {\r\n                    form: {\r\n                        model: {\r\n                            kaisu: \"\",\r\n                            niukeDateStart: \"\",\r\n                            niukeDateEnd: \"\",\r\n                            inputDateStart: \"\",\r\n                            inputDateEnd: \"\",\r\n                            seisansyaCodeTop: 9999,\r\n                            seisansyaCodeBottom: 0,\r\n                        },\r\n                        validation: {\r\n                            kaisu: [\r\n                                { required: true, message: '回数が入力されていません', trigger: 'blur' },\r\n                            ],\r\n                            niukeDateStart: [\r\n                                { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateniukeDate, trigger: 'blur' }\r\n                            ],\r\n                            niukeDateEnd: [\r\n                                { required: true, message: '荷受日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateniukeDate, trigger: 'blur' }\r\n                            ],\r\n                            inputDateStart: [\r\n                                { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateinputDate, trigger: 'blur' }\r\n                            ],\r\n                            inputDateEnd: [\r\n                                { required: true, message: '入力日付が入力されていません', trigger: 'blur' },\r\n                                { validator: this.validateinputDate, trigger: 'blur' }\r\n                            ],\r\n                            seisansyaCodeBottom: [\r\n                                { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\r\n\r\n                            ],\r\n                            seisansyaCodeTop: [\r\n                                { required: true, message: '生産者コードが入力されていません', trigger: 'blur' },\r\n\r\n                            ],\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F10) {\r\n                    this.print()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F11) {\r\n                    this.confirm()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            validateniukeDate: function (rule, value, callback) {\r\n                var model = this.data.form.model\r\n                if (!time.compareDate(model.niukeDateStart, model.niukeDateEnd)) {\r\n                    callback(new Error('日付の上下関係に誤りがあります'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            validateinputDate: function (rule, value, callback) {\r\n                var model = this.data.form.model\r\n                if (!time.compareDate(model.inputDateStart, model.inputDateEnd)) {\r\n                    callback(new Error('日付の上下関係に誤りがあります'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            createPostArray: function (print_flag) {\r\n                var model = this.data.form.model;\r\n\r\n                var niukeDateStart_ = model.niukeDateStart.split(\"-\");\r\n                var niukeDateStart = String(niukeDateStart_[0] + niukeDateStart_[1] + niukeDateStart_[2]);\r\n                var niukeDateEnd_ = model.niukeDateEnd.split(\"-\");\r\n                var niukeDateEnd = String(niukeDateEnd_[0] + niukeDateEnd_[1] + niukeDateEnd_[2]);\r\n\r\n                var inputDateStart_ = model.inputDateStart.split(\"-\");\r\n                var inputDateStart = String(inputDateStart_[0] + inputDateStart_[1] + inputDateStart_[2]);\r\n                var inputDateEnd_ = model.inputDateEnd.split(\"-\");\r\n                var inputDateEnd = String(inputDateEnd_[0] + inputDateEnd_[1] + inputDateEnd_[2]);\r\n\r\n\r\n                return {\r\n                    \"kaisu\": model.kaisu,\r\n                    \"niukeDATEdown\": niukeDateStart,\r\n                    \"niukeDATEup\": niukeDateEnd,\r\n                    \"inputDATEdown\": inputDateStart,\r\n                    \"inputDATEup\": inputDateEnd,\r\n                    \"seisansyaCDdown\": model.seisansyaCodeBottom,\r\n                    \"seisansyaCDup\": model.seisansyaCodeTop,\r\n                    \"PrintFlg\": print_flag,\r\n                };\r\n      \r\n\r\n\r\n            },\r\n            print: function () {\r\n                this.$refs['form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n                        var postArray = this.createPostArray(true);\r\n\r\n                        axios.post(url.niukeMonitorList, postArray)\r\n                            .then(response => {\r\n                                console.log(response.data);\r\n                                if (response.data.url == undefined) {\r\n                                    alert(\"データが無い又はデータが多すぎます\");\r\n                                } else {\r\n\r\n                                    window.open(response.data.url);\r\n\r\n                                }\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n\r\n                });\r\n            },\r\n            confirm: function () {\r\n\r\n                this.$refs['form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        axios.post(url.niukeMonitorList, this.createPostArray(false))\r\n                            .then(response => {\r\n                                console.log(response.data);\r\n                                window.open(response.data.url);\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n\r\n                });\r\n             },\r\n            finish: function () {\r\n\r\n              this.$router.push('/hoshigaki/');  \r\n\r\n            }\r\n        },\r\n        created: function () {\r\n            this.data.form.model.niukeDateStart = time.nowJapanDateInput();\r\n            this.data.form.model.niukeDateEnd = time.nowJapanDateInput();\r\n            this.data.form.model.inputDateStart = time.nowJapanDateInput();\r\n            this.data.form.model.inputDateEnd = time.nowJapanDateInput();\r\n\r\n\r\n        }\r\n\r\n    }\r\n</script>\r\n\\"]}]}