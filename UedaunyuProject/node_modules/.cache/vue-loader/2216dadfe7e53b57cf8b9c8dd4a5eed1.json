{"remainingRequest":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\MasterUnchin.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\MasterUnchin.vue","mtime":1603716296585},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716209870},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716212749},{"path":"C:\\Users\\shhok\\source\\repos\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716290397}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport Card from '@/components/Card/Card.vue'\nimport KeyboardEvents from '@/components/KeyboardEvents.vue'\nimport config from '@/config.js'\nimport ElIncrementSearch from '@/components/IncrementSearch.vue'\nimport url from '@/js/api_url.js'\n\nexport default {\n    name: 'niukeSyukei',\n    components: {\n        Card, KeyboardEvents, ElIncrementSearch\n    },\n    data: function () {\n        return {\n            data: {\n                search: {\n                    model: {\n                        syoriKubun: \"\",\n                        unchin: \"\",\n                    },\n                    validation: {\n                        syoriKubun: [\n                            { required: true, message: '処理区分が入力されていません', trigger: 'blur' },\n                        ],\n                        unchin: [\n                            { required: true, message: '運賃が入力されていません' },\n                        ]\n\n                    }\n                },\n                unchin: {\n                    model: {\n                        unchinCD: null,\n                        unchinRank: null,\n                        unchin: null,\n                    },\n                    validation: {\n                        unchinCD: [\n                            { required: true, message: '運賃コードが入力されていません', trigger: 'blur' },\n                        ],\n                        unchinRank: [\n                            { required: true, message: '運賃ランクが入力されていません', trigger: 'blur' },\n                        ],\n                        unchin: [\n                            { required: true, message: '運賃がされていません', trigger: 'blur' },\n                        ],\n                    }\n                },\n                autoComplete: {\n                    unchinCD: null,\n                    unchinRank: null,\n                    unchin: null,\n                },\n                confirmFlag: false,\n                updateButton: \"\",\n                autofocus: {\n                    unchinCodeSearch: false,\n                    unchinCodeUnchin: false,\n                },\n                unchinData: [],\n                unchinchiku: [],\n\n            },\n        }\n    },\n    methods: {\n        keyboardEvent(e) {\n            if (e.keyCode == config.KEY_CODES.F5) {\n                if (!this.data.confirmFlag) {\n                    this.confirm()\n                }\n            }\n            if (e.keyCode == config.KEY_CODES.F9) {\n                if (this.data.confirmFlag) {\n                    this.submit()\n                }\n\n            }\n\n            if (e.keyCode == config.KEY_CODES.F10) {\n                if (this.data.confirmFlag) {\n                    this.clear()\n                }\n\n            }\n            if (e.keyCode == config.KEY_CODES.F12) {\n                this.finish()\n            }\n        },\n        clear: function () {\n\n            this.data.confirmFlag = false;\n\n            for (var i in this.data.unchin.model) {\n                this.data.unchin.model[i] = \"\"\n            }\n            this.data.updateButton = \"\";\n            this.data.autofocus.unchinCodeSearch = true;\n        },\n        finish: function () {\n            alert(\"終了\");\n        },\n        autoCompleteUnchin: function (index) {\n\n            var autoComplete = this.data.unchinData[index];\n\n            for (var i in autoComplete) {\n                this.data.autoComplete[i] = autoComplete[i];\n            }\n\n        },\n        confirm: function () {\n\n            this.$refs['searchForm'].validate((valid) => {\n\n                if (valid) {\n\n\n                    this.data.confirmFlag = true;\n\n                    if (this.data.search.model.syoriKubun != 0) {\n                        for (var i in this.data.unchin.model) {\n\n                            this.data.unchin.model[i] = this.data.autoComplete[i];\n\n                        }\n\n                    }\n                    if (this.data.search.model.syoriKubun == 0) {\n                        this.data.updateButton = \"登録\";\n                    } else if (this.data.search.model.syoriKubun == 1) {\n                        this.data.updateButton = \"更新\";\n                    } else if (this.data.search.model.syoriKubun == 2) {\n                        this.data.updateButton = \"削除\";\n                    }\n\n                }\n            });\n\n        },\n        unchinCodeOverLap: function (kind) {\n\n\n            axios.get(url.unchinMaster)\n                .then(response => {\n\n                    var unchin = this.data.unchin.model;\n                    for (var i in response.data) {\n\n                        if (unchin.unchinCD == response.data[i].unchinCD && unchin.unchinRank == response.data[i].unchinRank) {\n                            alert(\"入力した行は既に存在します\");\n                            if (kind == \"code\") {\n\n                                this.data.unchin.model.unchinCD = \"\";\n\n                            } else if (kind == \"rank\") {\n\n                                this.data.unchin.model.unchinRank = \"\";\n\n                            }\n\n                        }\n\n                    }\n\n                })\n                .catch(response => console.log(response))\n\n\n        },\n        submit: function () {\n\n            this.$refs['unchinForm'].validate((valid) => {\n\n                if (valid) {\n\n\n                    //※axiosによる更新処理\n\n                    var unchin = this.data.unchin.model\n\n                    var postArray = {\n                        \"unchinCD\": unchin.unchinCD,\n                        \"unchinRank\": unchin.unchinRank,\n                        \"unchin\": unchin.unchin,\n                        \"Nyuryokutantocd\": this.$store.state.login.userCode\n                    }\n\n                    if (this.data.search.model.syoriKubun == 0) {\n\n                        axios.post(url.unchinMaster, postArray)\n                            .then(response => {\n                                this.$message({\n                                    message: '登録に成功しました',\n                                    type: 'success'\n                                });\n                            })\n                            .catch(response => {\n                                this.$message({\n                                    message: '登録に失敗しました',\n                                    type: 'error'\n                                });\n                            });\n\n\n                        for (var i in this.data.unchin.model) {\n                            this.data.unchin.model[i] = \"\"\n                        }\n                        this.data.autofocus.unchinCodeSeisansya = true;\n\n\n                    } else {\n\n                        if (this.data.search.model.syoriKubun == 1) {\n\n                            axios.put(url.unchinMaster, postArray)\n                                .then(response => {\n                                    this.$message({\n                                        message: '修正に成功しました',\n                                        type: 'success'\n                                    });\n                                })\n                                .catch(response => {\n                                    this.$message({\n                                        message: '修正に失敗しました',\n                                        type: 'error'\n                                    });\n                                });\n\n                        } else if (this.data.search.model.syoriKubun == 2) {\n\n                            axios.delete(url.unchinMaster, { params: postArray })\n                                .then(response => {\n                                    this.$message({\n                                        message: '削除に成功しました',\n                                        type: 'success'\n                                    });\n\n                                })\n                                .catch(response => {\n                                    this.$message({\n                                        message: '削除に失敗しました',\n                                        type: 'error'\n                                    });\n                                })\n\n\n                        }\n\n\n                        this.clear()\n                    }\n\n                }\n            })\n\n        }\n    },\n    created: function () {\n\n\n        axios.get(url.unchinMaster)\n            .then(response => {\n\n                console.log(response.data);\n                this.data.unchinData = response.data;\n\n            })\n            .catch(response => console.log(response))\n\n\n\n\n        axios.get(url.meisyoMaster)\n            .then(response => {\n\n                for (var i = 0; i < response.data.length; i++) {\n                    if (response.data[i].meisyoCD == \"7\") {\n                        this.data.unchinchiku.push(response.data[i]);\n                    }\n                }\n            })\n            .catch(response => console.log(response))\n\n\n\n    },\n    mounted: function () {\n\n    },\n    watch: {\n        \"data.search.model.syoriKubun\": function (new_value) {\n\n            if (new_value == 0) {\n                this.data.search.validation.unchin[0].required = false;\n            } else {\n                this.data.search.validation.unchin[0].required = true;\n            }\n        },\n\n    }\n}\n",{"version":3,"sources":["MasterUnchin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"MasterUnchin.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>運賃マスタ</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.search.model\" :rules=\"data.search.validation\" ref=\"searchForm\" label-width=\"120px\">\r\n                    <div class=\"row\">\r\n                        <div class='col-md-3'>\r\n                            <label for='処理区分' class='col-form-label px-1' style='width:100%;'>処理区分</label>\r\n                            <el-form-item label-width=\"0\" prop=\"syoriKubun\">\r\n                                <el-select id=\"syoriKubun\" v-model=\"data.search.model.syoriKubun\" style=\"width: 100%;\" :disabled=\"data.confirmFlag\" :autofocus=\"data.syoriKubunFocus\">\r\n                                    <el-option value='0' :label=\"'0:新規'\"></el-option>\r\n                                    <el-option value='1' :label=\"'1:修正'\"></el-option>\r\n                                    <el-option value='2' :label=\"'2:削除'\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </div>\r\n                        <div class='col-md-8'>\r\n                            <label for='運賃' class='col-form-label px-1' style='width:100%;'>運賃</label>\r\n                            <el-form-item label-width=\"0\" prop=\"unchin\">\r\n                                <el-select v-model=\"data.search.model.unchin\" style=\"width: 100%;\" @change=\"autoCompleteUnchin\" :disabled=\"data.confirmFlag\">\r\n                                    <el-option v-for=\"(unchin, index) in data.unchinData\" :value='index' :label=\"'コード:' + unchin.unchinCD + 'ランク:' + unchin.unchinRank\"  :key=\"unchin.number\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n\r\n                </el-form>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div style='text-align:right;width:100%;'>\r\n                            <el-button style='margin-left:2%;' type='warning' v-on:click=\"confirm\" :disabled=\"data.confirmFlag\">確定(F5)</el-button>\r\n                            <el-button style='margin-left:2%;' type='primary' v-on:click=\"finish\">終了(F12)</el-button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style=\"margin-top:4%;\" v-if=\"data.confirmFlag\">\r\n                    <div class=\"col-12\">\r\n                        <el-form :model=\"data.unchin.model\" :rules=\"data.unchin.validation\" ref=\"unchinForm\" label-width=\"120px\">\r\n\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            運賃コード\r\n                                        </th>\r\n                                        <th>\r\n                                            運賃ランク\r\n                                        </th>\r\n                                        <th>\r\n                                            運賃\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\" prop=\"unchinCD\">\r\n                                            <el-input-number type='text'\r\n                                                             style='width:100%;'\r\n                                                             :disabled=\"data.search.model.syoriKubun != 0\"\r\n                                                             controls-position=\"right\"\r\n                                                             v-model=\"data.unchin.model.unchinCD\"\r\n                                                             @change=\"unchinCodeOverLap('code')\"\r\n                                                             :autofocus=\"data.autofocus.unchinCodeUnchin\"></el-input-number>\r\n                                        </el-form-item>\r\n                                    </td>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\" prop=\"unchinRank\">\r\n                                            <el-input-number type='text'\r\n                                                             style='width:100%;'\r\n                                                             :disabled=\"data.search.model.syoriKubun != 0\"\r\n                                                             controls-position=\"right\"\r\n                                                             @change=\"unchinCodeOverLap('rank')\"\r\n                                                             v-model=\"data.unchin.model.unchinRank\"></el-input-number>\r\n\r\n                                        </el-form-item>\r\n                                    </td>\r\n                                    <td>\r\n                                        <el-form-item label-width=\"0\" prop=\"unchin\">\r\n                                            <el-input-number type='text'\r\n                                                             style='width:100%;'\r\n                                                             controls-position=\"right\"\r\n                                                             :disabled=\"data.search.model.syoriKubun == 2\"\r\n                                                             v-model=\"data.unchin.model.unchin\"></el-input-number>\r\n\r\n                                        </el-form-item>\r\n                                    </td>\r\n                              \r\n                                </tr>\r\n                            </table>\r\n                        </el-form>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div style='text-align:right;width:100%;'>\r\n                            <el-button style='margin-left:2%;' type='primary' v-on:click=\"clear\">画面クリア(F10)</el-button>\r\n                            <el-button style='margin-left:2%;' type='warning' v-on:click=\"submit\">{{data.updateButton}}(F9)</el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import Card from '@/components/Card/Card.vue'\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import config from '@/config.js'\r\n    import ElIncrementSearch from '@/components/IncrementSearch.vue'\r\n    import url from '@/js/api_url.js'\r\n\r\n    export default {\r\n        name: 'niukeSyukei',\r\n        components: {\r\n            Card, KeyboardEvents, ElIncrementSearch\r\n        },\r\n        data: function () {\r\n            return {\r\n                data: {\r\n                    search: {\r\n                        model: {\r\n                            syoriKubun: \"\",\r\n                            unchin: \"\",\r\n                        },\r\n                        validation: {\r\n                            syoriKubun: [\r\n                                { required: true, message: '処理区分が入力されていません', trigger: 'blur' },\r\n                            ],\r\n                            unchin: [\r\n                                { required: true, message: '運賃が入力されていません' },\r\n                            ]\r\n\r\n                        }\r\n                    },\r\n                    unchin: {\r\n                        model: {\r\n                            unchinCD: null,\r\n                            unchinRank: null,\r\n                            unchin: null,\r\n                        },\r\n                        validation: {\r\n                            unchinCD: [\r\n                                { required: true, message: '運賃コードが入力されていません', trigger: 'blur' },\r\n                            ],\r\n                            unchinRank: [\r\n                                { required: true, message: '運賃ランクが入力されていません', trigger: 'blur' },\r\n                            ],\r\n                            unchin: [\r\n                                { required: true, message: '運賃がされていません', trigger: 'blur' },\r\n                            ],\r\n                        }\r\n                    },\r\n                    autoComplete: {\r\n                        unchinCD: null,\r\n                        unchinRank: null,\r\n                        unchin: null,\r\n                    },\r\n                    confirmFlag: false,\r\n                    updateButton: \"\",\r\n                    autofocus: {\r\n                        unchinCodeSearch: false,\r\n                        unchinCodeUnchin: false,\r\n                    },\r\n                    unchinData: [],\r\n                    unchinchiku: [],\r\n\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F5) {\r\n                    if (!this.data.confirmFlag) {\r\n                        this.confirm()\r\n                    }\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F9) {\r\n                    if (this.data.confirmFlag) {\r\n                        this.submit()\r\n                    }\r\n\r\n                }\r\n\r\n                if (e.keyCode == config.KEY_CODES.F10) {\r\n                    if (this.data.confirmFlag) {\r\n                        this.clear()\r\n                    }\r\n\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            clear: function () {\r\n\r\n                this.data.confirmFlag = false;\r\n\r\n                for (var i in this.data.unchin.model) {\r\n                    this.data.unchin.model[i] = \"\"\r\n                }\r\n                this.data.updateButton = \"\";\r\n                this.data.autofocus.unchinCodeSearch = true;\r\n            },\r\n            finish: function () {\r\n                alert(\"終了\");\r\n            },\r\n            autoCompleteUnchin: function (index) {\r\n\r\n                var autoComplete = this.data.unchinData[index];\r\n\r\n                for (var i in autoComplete) {\r\n                    this.data.autoComplete[i] = autoComplete[i];\r\n                }\r\n\r\n            },\r\n            confirm: function () {\r\n\r\n                this.$refs['searchForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n\r\n                        this.data.confirmFlag = true;\r\n\r\n                        if (this.data.search.model.syoriKubun != 0) {\r\n                            for (var i in this.data.unchin.model) {\r\n\r\n                                this.data.unchin.model[i] = this.data.autoComplete[i];\r\n\r\n                            }\r\n\r\n                        }\r\n                        if (this.data.search.model.syoriKubun == 0) {\r\n                            this.data.updateButton = \"登録\";\r\n                        } else if (this.data.search.model.syoriKubun == 1) {\r\n                            this.data.updateButton = \"更新\";\r\n                        } else if (this.data.search.model.syoriKubun == 2) {\r\n                            this.data.updateButton = \"削除\";\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n            },\r\n            unchinCodeOverLap: function (kind) {\r\n\r\n\r\n                axios.get(url.unchinMaster)\r\n                    .then(response => {\r\n\r\n                        var unchin = this.data.unchin.model;\r\n                        for (var i in response.data) {\r\n\r\n                            if (unchin.unchinCD == response.data[i].unchinCD && unchin.unchinRank == response.data[i].unchinRank) {\r\n                                alert(\"入力した行は既に存在します\");\r\n                                if (kind == \"code\") {\r\n\r\n                                    this.data.unchin.model.unchinCD = \"\";\r\n\r\n                                } else if (kind == \"rank\") {\r\n\r\n                                    this.data.unchin.model.unchinRank = \"\";\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    })\r\n                    .catch(response => console.log(response))\r\n\r\n\r\n            },\r\n            submit: function () {\r\n\r\n                this.$refs['unchinForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n\r\n                        //※axiosによる更新処理\r\n\r\n                        var unchin = this.data.unchin.model\r\n\r\n                        var postArray = {\r\n                            \"unchinCD\": unchin.unchinCD,\r\n                            \"unchinRank\": unchin.unchinRank,\r\n                            \"unchin\": unchin.unchin,\r\n                            \"Nyuryokutantocd\": this.$store.state.login.userCode\r\n                        }\r\n\r\n                        if (this.data.search.model.syoriKubun == 0) {\r\n\r\n                            axios.post(url.unchinMaster, postArray)\r\n                                .then(response => {\r\n                                    this.$message({\r\n                                        message: '登録に成功しました',\r\n                                        type: 'success'\r\n                                    });\r\n                                })\r\n                                .catch(response => {\r\n                                    this.$message({\r\n                                        message: '登録に失敗しました',\r\n                                        type: 'error'\r\n                                    });\r\n                                });\r\n\r\n\r\n                            for (var i in this.data.unchin.model) {\r\n                                this.data.unchin.model[i] = \"\"\r\n                            }\r\n                            this.data.autofocus.unchinCodeSeisansya = true;\r\n\r\n\r\n                        } else {\r\n\r\n                            if (this.data.search.model.syoriKubun == 1) {\r\n\r\n                                axios.put(url.unchinMaster, postArray)\r\n                                    .then(response => {\r\n                                        this.$message({\r\n                                            message: '修正に成功しました',\r\n                                            type: 'success'\r\n                                        });\r\n                                    })\r\n                                    .catch(response => {\r\n                                        this.$message({\r\n                                            message: '修正に失敗しました',\r\n                                            type: 'error'\r\n                                        });\r\n                                    });\r\n\r\n                            } else if (this.data.search.model.syoriKubun == 2) {\r\n\r\n                                axios.delete(url.unchinMaster, { params: postArray })\r\n                                    .then(response => {\r\n                                        this.$message({\r\n                                            message: '削除に成功しました',\r\n                                            type: 'success'\r\n                                        });\r\n\r\n                                    })\r\n                                    .catch(response => {\r\n                                        this.$message({\r\n                                            message: '削除に失敗しました',\r\n                                            type: 'error'\r\n                                        });\r\n                                    })\r\n\r\n\r\n                            }\r\n\r\n\r\n                            this.clear()\r\n                        }\r\n\r\n                    }\r\n                })\r\n\r\n            }\r\n        },\r\n        created: function () {\r\n\r\n\r\n            axios.get(url.unchinMaster)\r\n                .then(response => {\r\n\r\n                    console.log(response.data);\r\n                    this.data.unchinData = response.data;\r\n\r\n                })\r\n                .catch(response => console.log(response))\r\n\r\n\r\n\r\n\r\n            axios.get(url.meisyoMaster)\r\n                .then(response => {\r\n\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        if (response.data[i].meisyoCD == \"7\") {\r\n                            this.data.unchinchiku.push(response.data[i]);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(response => console.log(response))\r\n\r\n\r\n\r\n        },\r\n        mounted: function () {\r\n\r\n        },\r\n        watch: {\r\n            \"data.search.model.syoriKubun\": function (new_value) {\r\n\r\n                if (new_value == 0) {\r\n                    this.data.search.validation.unchin[0].required = false;\r\n                } else {\r\n                    this.data.search.validation.unchin[0].required = true;\r\n                }\r\n            },\r\n   \r\n        }\r\n    }\r\n</script>\r\n"]}]}