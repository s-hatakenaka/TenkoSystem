{"remainingRequest":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\SyukkaYoteiNyuryoku.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\src\\pages\\SyukkaYoteiNyuryoku.vue","mtime":1603336365423},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603336354165},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603336354440},{"path":"C:\\Users\\takum\\Documents\\hokuriku_tosbac\\Uedaunyu\\Uedaunyu-Tenkosystem\\UedaunyuProject\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603336364622}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport Card from '@/components/Card/Card.vue'\nimport KeyboardEvents from '@/components/KeyboardEvents.vue'\nimport config from '@/config.js'\nimport time from '@/js/status/time.js'\nimport url from '@/js/api_url.js'\n\nexport default {\n    name: 'niukeNyuryokuSyoki',\n    components: {\n        Card, KeyboardEvents\n    },\n    data: function () {\n        return {\n            loading: false,\n            model: {\n                nyuryokuDate: \"\",\n                selectedSyouhin: \"\",\n            },\n            validation: {\n                nyuryokuDate: [\n                    { required: true, message: '出荷日付が入力されていません', trigger: 'blur' },\n                ],\n                selectedSyouhin: [\n                    { required: true, message: '商品が入力されていません', trigger: 'blur' },\n                ],\n\n            },\n            syouhin: [\n            ],\n            tableData: [\n            ],\n            tableDataIndex: {\n\n            },\n            //一次元がサイズ、二次元が等級\n            zaiko: {\n            },\n            chiku: [\n            ],\n            shijo: [\n            ],\n            shijoIndex: {\n            },\n            size: [\n\n            ],\n            tokyu: [\n\n            ],\n            tokyuIndex: {\n            },\n            housouPattern: [\n\n            ],\n\n\n        }\n    },\n    methods: {\n        keyboardEvent(e) {\n            if (e.keyCode == config.KEY_CODES.F5) {\n                this.update()\n            }\n            if (e.keyCode == config.KEY_CODES.F12) {\n                this.finish()\n            }\n        },\n        changeSyouhin: function () {\n\n\n        },\n        shijoColspan: function () {\n\n            var length = 0;\n            for (var i in this.housouPattern) {\n                length++;\n            }\n            return length * 2;\n        },\n        housouPatternThead: function (chiku_code) {\n\n            var result = [];\n            var shijo = this.getShijoByChiku(chiku_code);\n            for (var i in shijo) {\n\n                if (shijo[i].visible) {\n                    for (var k in this.housouPattern) {\n                        result.push({ name: this.housouPattern[k].hyojimei, colspan: 2 });\n                    }\n\n                } else {\n                    result.push({ name: \"\", colspan: 1 });\n                }\n\n            }\n            return result;\n        },\n        getShijoByChiku: function (chiku_code) {\n            var result = [];\n            for (var i in this.shijo) {\n                if (this.shijo[i].shijyoChikuCD == chiku_code) {\n\n                    result.push(this.shijo[i]);\n                }\n            }\n\n            return result;\n        },\n        getTableData: function (chiku_key, size_key, tokyu_key) {\n\n            var result = [];\n\n            var shijo = this.getShijoByChiku(chiku_key);\n\n            for (var i = 0; i < shijo.length; i++) {\n\n                for (var k = 0; k < this.housouPattern.length; k++) {\n\n                    var Index = this.tableDataIndex[chiku_key][shijo[i].shijyoCD][size_key][tokyu_key][this.housouPattern[k].hosoPatternID];\n\n                    if (this.tableData[Index] != undefined) {\n                        result.push(this.tableData[Index]);\n\n                    }\n\n                }\n\n            }\n\n            return result;\n        },\n        getTdKind: function (chiku_key) {\n\n            var shijo = this.getShijoByChiku(chiku_key);\n\n            var housou_pattern_length = Object.keys(this.housouPattern).length;\n\n\n            var result = [];\n\n            for (var i in shijo) {\n\n                if (shijo[i].visible) {\n\n                    for (var k = 0; k < housou_pattern_length; k++) {\n\n                        result.push(\"大箱\");\n                        result.push(\"小箱\");\n                    }\n\n                } else {\n                    result.push(\"\");\n\n                }\n\n\n            }\n\n            return result;\n        },\n        getOobakoTotal: function (size_key, tokyu_key) {\n\n            var result = 0;\n            for (var i in this.tableData) {\n\n                var data = this.tableData[i];\n\n                if (data.size == size_key) {\n\n                    if (data.tokyu == tokyu_key) {\n                        result += data.oobako;\n                    }\n                }\n            }\n\n            return result;\n\n        },\n        getKobakoTotal: function (size_key, tokyu_key) {\n\n            var result = 0;\n            for (var i in this.tableData) {\n\n                var data = this.tableData[i];\n\n                if (data.size == size_key) {\n\n                    if (data.tokyu == tokyu_key) {\n                        result += data.kobako;\n                    }\n                }\n            }\n            return result;\n\n        },\n        createTableDataIndex: function () {\n\n            for (var i = 0; i < this.chiku.length; i++) {\n\n                var chikuCD = this.chiku[i].atai\n\n                this.tableDataIndex[chikuCD] = {};\n\n                var shijo = this.getShijoByChiku(chikuCD);\n\n                for (var k in shijo) {\n                    var shijoCD = shijo[k].shijyoCD;\n\n                    this.tableDataIndex[chikuCD][shijoCD] = {};\n\n                    for (var l = 0; l < this.size.length; l++) {\n\n                        var sizeCD = this.size[l].size;\n\n                        this.tableDataIndex[chikuCD][shijoCD][sizeCD] = {};\n\n                        for (var m = 0; m < this.size[l].tokyu.length; m++) {\n\n                            var tokyuCD = this.size[l].tokyu[m]\n                            this.tableDataIndex[chikuCD][shijoCD][sizeCD][tokyuCD] = {};\n\n                            for (var n = 0; n < this.housouPattern.length; n++) {\n\n                                var housouPatternCD = this.housouPattern[n].hosoPatternID\n\n                                this.tableDataIndex[chikuCD][shijoCD][sizeCD][tokyuCD][housouPatternCD] = null;\n\n                            }\n\n                        }\n\n                    }\n\n\n                }\n\n            }\n            console.log(this.tableDataIndex);\n\n        },\n        update: function () {\n\n\n            var postArray = {\n                \"SyouhinCode\": this.model.selectedSyouhin,\n                \"SyukkaDate\": this.model.nyuryokuDate,\n                \"NyuryokuTantosyaCD\": this.$store.state.login.userCode,\n                \"PostData\": [],\n\n            }\n\n\n            for (var i = 0; i < this.tableData.length; i++) {\n\n                var data = this.tableData[i];\n                if (data.oobako == undefined) {\n                    data.oobako = 0\n                }\n                if (data.kobako == undefined) {\n                    data.kobako = 0\n                }\n\n                postArray.PostData.push(data);\n            }\n\n            console.log(postArray);\n            this.loading = true;\n            axios.post(url.syukkayoteinyuryoku, postArray)\n                .then(response => {\n                    this.$message({\n                        message: '保存に成功しました',\n                        type: 'success'\n                    });\n                    this.loading = false;\n                    this.changeMeisai();\n\n\n                })\n                .catch(response => {\n                    this.$message({\n                        message: '通信に失敗しました',\n                        type: 'error'\n                    });\n                    this.loading = false;\n                    console.log(response)\n                })\n\n\n\n        },\n        finish: function () {\n            this.$router.push('/hoshigaki/');\n        },\n        changeMeisai: function () {\n            this.$refs['searchForm'].validate((valid) => {\n\n                if (valid) {\n\n\n                    this.tableData = [];\n\n                    this.size = [];\n\n                    this.tokyu = [];\n\n\n                    axios.get(url.syohinSizeTokyuPatternMaster)\n                        .then(response => {\n                            var Data = [];\n                            for (var i = 0; i < response.data.length; i++) {\n                                if (response.data[i].syohinCD == this.model.selectedSyouhin) {\n                                    Data.push(response.data[i]);\n                                }\n                            }\n                            for (var i = 0; i < Data.length; i++) {\n                                var is_exsist = false;\n\n                                for (var k = 0; k < this.tokyu.length; k++) {\n\n                                    if (this.tokyu[k].tokyu == Data[i].tokyu) {\n\n                                        is_exsist = true;\n\n                                    }\n\n                                }\n\n                                if (!is_exsist) {\n\n                                    this.tokyu.push(Data[i]);\n                                    this.tokyuIndex[Data[i].tokyu] = this.tokyu.length - 1;\n\n\n                                }\n\n                            }\n\n                            axios.get(url.syohinSizeTokyuPatternMaster)\n                                .then(response => {\n                                    var Data = [];\n                                    for (var i = 0; i < response.data.length; i++) {\n                                        if (response.data[i].syohinCD == this.model.selectedSyouhin) {\n                                            Data.push(response.data[i]);\n                                        }\n                                    }\n\n                                    for (var i = 0; i < Data.length; i++) {\n\n                                        var is_exsist = false;\n                                        var size;\n                                        for (var k = 0; k < this.size.length; k++) {\n\n                                            if (this.size[k].size == Data[i].size) {\n\n                                                is_exsist = true;\n                                                size = this.size[k];\n\n                                            }\n\n                                        }\n\n                                        if (is_exsist) {\n\n                                            size.tokyu.push(Data[i].tokyu);\n\n                                        } else {\n                                            var tokyu = Data[i].tokyu;\n\n                                            Data[i].tokyu = [tokyu];\n\n                                            this.size.push(Data[i]);\n\n                                        }\n                                    }\n\n                                    axios.get(url.SyohinHinsyuHosoPatternMaster)\n                                        .then(response => {\n                                            var Data = [];\n                                            for (var i = 0; i < response.data.length; i++) {\n                                                if (response.data[i].syohinCD == this.model.selectedSyouhin) {\n                                                    Data.push(response.data[i]);\n                                                }\n                                            }\n                                            this.housouPattern = Data;\n\n                                            this.createTableDataIndex();\n\n                                            var postArray = [\n                                                { key: \"SyukkaDate\", value: this.model.nyuryokuDate },\n                                                { key: \"SyouhinCode\", value: this.model.selectedSyouhin },\n                                            ]\n                                            var getUrl = url.createGetUrl(url.syukkayoteinyuryoku, postArray);\n\n                                            axios.get(getUrl)\n                                                .then(response => {\n                                                    console.log(response.data);\n                                                    for (var i = 0; i < response.data.length; i++) {\n                                                        var data = response.data[i];\n\n                                                        this.tableDataIndex[data.chiku][data.shijyo][data.size][data.tokyu][data.hosoPattern] = i;\n\n                                                    }\n\n                                                    this.tableData = response.data;\n\n\n\n                                                    var getUrl = url.createGetUrl(url.zaikohyoji, [{ key: \"Syohincd\", value: this.model.selectedSyouhin }]);\n\n                                                    axios.get(getUrl)\n                                                        .then(response => {\n                                                            console.log(\"在庫\", response.data);\n\n                                                            this.zaiko = response.data;\n                                                        })\n                                                        .catch(response => console.log(response))\n\n\n                                                })\n                                                .catch(response => console.log(response))\n\n\n\n                                        })\n                                        .catch(response => console.log(response))\n\n\n\n                                })\n                                .catch(response => console.log(response))\n\n\n\n                        })\n                        .catch(response => console.log(response))\n\n\n\n\n\n                }\n            });\n\n\n        },\n        getZaiko: function (size, tokyu) {\n\n            var firstIndex;\n            for (var i = 0; i < this.zaiko.length; i++) {\n\n                if (size == this.zaiko[i].sizecd) {\n                    firstIndex = i;\n                }\n            }\n\n            if (this.zaiko[firstIndex] == undefined) {\n                return \"\";\n            }\n\n            var secondIndex;\n            for (var i = 0; i < this.zaiko[firstIndex].tokyuData.length; i++) {\n\n                if (tokyu == this.zaiko[firstIndex].tokyuData[i].tokyucd) {\n                    secondIndex = i;\n                }\n            }\n\n            if (firstIndex == undefined || secondIndex == undefined) {\n\n                return \"データがありません\";\n            }\n\n            return this.zaiko[firstIndex].tokyuData[secondIndex].value;\n\n\n        },\n    },\n    created: function () {\n\n        this.model.nyuryokuDate = time.nowJapanDateInput();\n\n        axios.get(url.syouhinMaster)\n            .then(response => {\n                console.log(response.data);\n                for (var i = 0; i < response.data.length; i++) {\n                    if (response.data[i].syohinCD == 0 || response.data[i].syohinCD == 1) {\n\n                        this.syouhin.push(response.data[i]);\n                    }\n                }\n\n\n            })\n            .catch(response => {\n                console.log(response)\n            }\n\n            )\n\n\n\n        axios.get(url.meisyoMaster)\n            .then(response => {\n                for (var i = 0; i < response.data.length; i++) {\n                    if (response.data[i].meisyoCD == \"7\") {\n                        this.chiku.push(response.data[i]);\n                    }\n                }\n                console.log(this.chiku);\n            })\n            .catch(response => console.log(response))\n\n        axios.get(url.shijoMaster)\n            .then(response => {\n                for (var i = 0; i < response.data.length; i++) {\n\n                    if (response.data[i].hyojiFlg == 1) {\n                        this.shijo.push(response.data[i]);\n                    }\n\n                }\n\n                for (var i = 0; i < this.shijo.length; i++) {\n                    this.$set(this.shijo[i], 'visible', true);\n                    this.shijoIndex[this.shijo[i].shijyoCD] = i;\n                }\n            })\n            .catch(response => console.log(response))\n\n\n\n    },\n    watch: {\n\n\n    },\n}\n",{"version":3,"sources":["SyukkaYoteiNyuryoku.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;;;AAMA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA;AACA","file":"SyukkaYoteiNyuryoku.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>出荷予定入力</span>\r\n            </div>\r\n            <div slot='default'\r\n                 v-loading=\"loading\"\r\n                 element-loading-text=\"保存中\"\r\n                 element-loading-spinner=\"el-icon-loading\"\r\n                 element-loading-background=\"rgba(0, 0, 0, 0.8)\">\r\n                <form id=\"niukeNyuryokuForm\">\r\n                    <div class='row'>\r\n                        <el-form :model=\"model\" :rules=\"validation\" ref=\"searchForm\" label-width=\"120px\">\r\n\r\n                            <div class='col-md-12'>\r\n                                <label for='商品' class='col-form-label px-1' style='width:100%;'>商品</label>\r\n                                <el-form-item label-width=\"0\" prop=\"selectedSyouhin\" style='width:100%;'>\r\n                                    <el-select id=\"syoriKubun\" v-model=\"model.selectedSyouhin\" @change=\"changeMeisai\" style=\"width:100%; display:block;\">\r\n                                        <el-option v-for=\"(syouhin ,index) in syouhin\" v-bind:key=\"syouhin.number\" :value='syouhin.syohinCD' :label=\"syouhin.syohinmei\"></el-option>\r\n                                    </el-select>\r\n                                </el-form-item>\r\n                            </div>\r\n                            <div class='col-md-12'>\r\n                                <label for='日付' class='col-form-label px-1' style='width:100%;'>日付</label>\r\n                                <el-form-item label-width=\"0\" prop=\"nyuryokuDate\">\r\n                                    <el-input type='date'\r\n                                              v-model=\"model.nyuryokuDate\"\r\n                                              style=\"width:100%; display:block;\"\r\n                                              @change=\"changeMeisai\"></el-input>\r\n                                </el-form-item>\r\n\r\n                            </div>\r\n                        </el-form>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12' v-for=\"chiku in chiku\" :key=\"chiku.number\" style='margin-top:2%;white-space:nowrap;overflow-x:scroll;'>\r\n                            <p>地区:{{chiku.meisyo}}</p>\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th v-for=\"shijoData in getShijoByChiku(chiku.atai)\" :key=\"shijoData.number\" v-bind:colspan=\"shijoData.visible ? shijoColspan():1\"><el-button type=\"danger\" round v-on:click=\" $set(shijoData, 'visible', !shijoData.visible)\">{{shijoData.visible ? \"非表示\":\"表示\"}}</el-button>　{{shijoData.shijyomei}}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>サイズ</th>\r\n                                        <th>等級</th>\r\n                                        <th v-for=\"housou_pattern in housouPatternThead(chiku.atai)\" :key=\"housou_pattern.number\" v-bind:colspan=\"housou_pattern.colspan\">{{housou_pattern.name}}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th v-for=\"input_kind in getTdKind(chiku.atai)\" :key=\"input_kind.number\">{{input_kind}}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody v-for=\"(size,size_index) in size\" :key=\"size.number\">\r\n                                    <tr v-for=\"tokyu_key in size.tokyu\" :key=\"tokyu_key.number\">\r\n                                        <td>{{size.sizeHyojimei}}</td>\r\n                                        <td>{{tokyu[tokyuIndex[tokyu_key]].tokyuHyojimei}}</td>\r\n                                        <td v-for=\"(table_data,table_data_index) in getTableData(chiku.atai,size.size,tokyu_key)\" :key=\"table_data.number\" v-bind:class=\"!shijo[shijoIndex[table_data.shijyo]].visible && Number(table_data_index)%housouPattern.length != 0 ? 'unvisible' : ''\" v-bind:colspan=\"shijo[shijoIndex[table_data.shijyo]].visible ? 2 : 1\">\r\n                                            <el-input-number v-model=\"table_data.oobako\"\r\n                                                             style=\"margin-right:0.5%;\"\r\n                                                             v-if=\"shijo[shijoIndex[table_data.shijyo]].visible\"\r\n                                                             :controls=\"false\"></el-input-number>\r\n                                            <el-input-number v-model=\"table_data.kobako\"\r\n                                                             v-if=\"shijo[shijoIndex[table_data.shijyo]].visible\"\r\n                                                             :controls=\"false\"></el-input-number>\r\n\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" style=\"margin-top:3%;\">\r\n                        <div class='col-md-6'>\r\n\r\n                            <table class=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>サイズ</th>\r\n                                        <th>等級</th>\r\n                                        <th colspan=\"3\">市場計</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>大箱出荷数</th>\r\n                                        <th>小箱出荷数</th>\r\n                                        <th>在庫数</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody v-for=\"(size,size_index) in size\" :key=\"size.number\">\r\n\r\n                                    <tr v-for=\"tokyu_key in size.tokyu\" :key=\"tokyu_key.number\">\r\n                                        <th>{{size.sizeHyojimei}}</th>\r\n                                        <th>{{tokyu[tokyuIndex[tokyu_key]].tokyuHyojimei}}</th>\r\n                                        <th>{{getOobakoTotal(size.size,tokyu_key)}}</th>\r\n                                        <th>{{getKobakoTotal(size.size,tokyu_key)}}</th>\r\n                                        <th>{{getZaiko(size.size,tokyu_key)}}</th>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div class='row'>\r\n                    <div class='col-md-12'>\r\n                        <div style='text-align:right;width:100%;'>\r\n                            <el-button style='margin-left:2%;' type='primary' v-on:click=\"update\">更新(F5)</el-button>\r\n                            <el-button style='margin-left:2%;' type='warning' v-on:click=\"finish\">終了(F12)</el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import Card from '@/components/Card/Card.vue'\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import config from '@/config.js'\r\n    import time from '@/js/status/time.js'\r\n    import url from '@/js/api_url.js'\r\n\r\n    export default {\r\n        name: 'niukeNyuryokuSyoki',\r\n        components: {\r\n            Card, KeyboardEvents\r\n        },\r\n        data: function () {\r\n            return {\r\n                loading: false,\r\n                model: {\r\n                    nyuryokuDate: \"\",\r\n                    selectedSyouhin: \"\",\r\n                },\r\n                validation: {\r\n                    nyuryokuDate: [\r\n                        { required: true, message: '出荷日付が入力されていません', trigger: 'blur' },\r\n                    ],\r\n                    selectedSyouhin: [\r\n                        { required: true, message: '商品が入力されていません', trigger: 'blur' },\r\n                    ],\r\n\r\n                },\r\n                syouhin: [\r\n                ],\r\n                tableData: [\r\n                ],\r\n                tableDataIndex: {\r\n\r\n                },\r\n                //一次元がサイズ、二次元が等級\r\n                zaiko: {\r\n                },\r\n                chiku: [\r\n                ],\r\n                shijo: [\r\n                ],\r\n                shijoIndex: {\r\n                },\r\n                size: [\r\n\r\n                ],\r\n                tokyu: [\r\n\r\n                ],\r\n                tokyuIndex: {\r\n                },\r\n                housouPattern: [\r\n\r\n                ],\r\n\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F5) {\r\n                    this.update()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            changeSyouhin: function () {\r\n\r\n\r\n            },\r\n            shijoColspan: function () {\r\n\r\n                var length = 0;\r\n                for (var i in this.housouPattern) {\r\n                    length++;\r\n                }\r\n                return length * 2;\r\n            },\r\n            housouPatternThead: function (chiku_code) {\r\n\r\n                var result = [];\r\n                var shijo = this.getShijoByChiku(chiku_code);\r\n                for (var i in shijo) {\r\n\r\n                    if (shijo[i].visible) {\r\n                        for (var k in this.housouPattern) {\r\n                            result.push({ name: this.housouPattern[k].hyojimei, colspan: 2 });\r\n                        }\r\n\r\n                    } else {\r\n                        result.push({ name: \"\", colspan: 1 });\r\n                    }\r\n\r\n                }\r\n                return result;\r\n            },\r\n            getShijoByChiku: function (chiku_code) {\r\n                var result = [];\r\n                for (var i in this.shijo) {\r\n                    if (this.shijo[i].shijyoChikuCD == chiku_code) {\r\n\r\n                        result.push(this.shijo[i]);\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            },\r\n            getTableData: function (chiku_key, size_key, tokyu_key) {\r\n\r\n                var result = [];\r\n\r\n                var shijo = this.getShijoByChiku(chiku_key);\r\n\r\n                for (var i = 0; i < shijo.length; i++) {\r\n\r\n                    for (var k = 0; k < this.housouPattern.length; k++) {\r\n\r\n                        var Index = this.tableDataIndex[chiku_key][shijo[i].shijyoCD][size_key][tokyu_key][this.housouPattern[k].hosoPatternID];\r\n\r\n                        if (this.tableData[Index] != undefined) {\r\n                            result.push(this.tableData[Index]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return result;\r\n            },\r\n            getTdKind: function (chiku_key) {\r\n\r\n                var shijo = this.getShijoByChiku(chiku_key);\r\n\r\n                var housou_pattern_length = Object.keys(this.housouPattern).length;\r\n\r\n\r\n                var result = [];\r\n\r\n                for (var i in shijo) {\r\n\r\n                    if (shijo[i].visible) {\r\n\r\n                        for (var k = 0; k < housou_pattern_length; k++) {\r\n\r\n                            result.push(\"大箱\");\r\n                            result.push(\"小箱\");\r\n                        }\r\n\r\n                    } else {\r\n                        result.push(\"\");\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                return result;\r\n            },\r\n            getOobakoTotal: function (size_key, tokyu_key) {\r\n\r\n                var result = 0;\r\n                for (var i in this.tableData) {\r\n\r\n                    var data = this.tableData[i];\r\n\r\n                    if (data.size == size_key) {\r\n\r\n                        if (data.tokyu == tokyu_key) {\r\n                            result += data.oobako;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return result;\r\n\r\n            },\r\n            getKobakoTotal: function (size_key, tokyu_key) {\r\n\r\n                var result = 0;\r\n                for (var i in this.tableData) {\r\n\r\n                    var data = this.tableData[i];\r\n\r\n                    if (data.size == size_key) {\r\n\r\n                        if (data.tokyu == tokyu_key) {\r\n                            result += data.kobako;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n\r\n            },\r\n            createTableDataIndex: function () {\r\n\r\n                for (var i = 0; i < this.chiku.length; i++) {\r\n\r\n                    var chikuCD = this.chiku[i].atai\r\n\r\n                    this.tableDataIndex[chikuCD] = {};\r\n\r\n                    var shijo = this.getShijoByChiku(chikuCD);\r\n\r\n                    for (var k in shijo) {\r\n                        var shijoCD = shijo[k].shijyoCD;\r\n\r\n                        this.tableDataIndex[chikuCD][shijoCD] = {};\r\n\r\n                        for (var l = 0; l < this.size.length; l++) {\r\n\r\n                            var sizeCD = this.size[l].size;\r\n\r\n                            this.tableDataIndex[chikuCD][shijoCD][sizeCD] = {};\r\n\r\n                            for (var m = 0; m < this.size[l].tokyu.length; m++) {\r\n\r\n                                var tokyuCD = this.size[l].tokyu[m]\r\n                                this.tableDataIndex[chikuCD][shijoCD][sizeCD][tokyuCD] = {};\r\n\r\n                                for (var n = 0; n < this.housouPattern.length; n++) {\r\n\r\n                                    var housouPatternCD = this.housouPattern[n].hosoPatternID\r\n\r\n                                    this.tableDataIndex[chikuCD][shijoCD][sizeCD][tokyuCD][housouPatternCD] = null;\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                }\r\n                console.log(this.tableDataIndex);\r\n\r\n            },\r\n            update: function () {\r\n\r\n\r\n                var postArray = {\r\n                    \"SyouhinCode\": this.model.selectedSyouhin,\r\n                    \"SyukkaDate\": this.model.nyuryokuDate,\r\n                    \"NyuryokuTantosyaCD\": this.$store.state.login.userCode,\r\n                    \"PostData\": [],\r\n\r\n                }\r\n\r\n\r\n                for (var i = 0; i < this.tableData.length; i++) {\r\n\r\n                    var data = this.tableData[i];\r\n                    if (data.oobako == undefined) {\r\n                        data.oobako = 0\r\n                    }\r\n                    if (data.kobako == undefined) {\r\n                        data.kobako = 0\r\n                    }\r\n\r\n                    postArray.PostData.push(data);\r\n                }\r\n\r\n                console.log(postArray);\r\n                this.loading = true;\r\n                axios.post(url.syukkayoteinyuryoku, postArray)\r\n                    .then(response => {\r\n                        this.$message({\r\n                            message: '保存に成功しました',\r\n                            type: 'success'\r\n                        });\r\n                        this.loading = false;\r\n                        this.changeMeisai();\r\n\r\n\r\n                    })\r\n                    .catch(response => {\r\n                        this.$message({\r\n                            message: '通信に失敗しました',\r\n                            type: 'error'\r\n                        });\r\n                        this.loading = false;\r\n                        console.log(response)\r\n                    })\r\n\r\n\r\n\r\n            },\r\n            finish: function () {\r\n                this.$router.push('/hoshigaki/');\r\n            },\r\n            changeMeisai: function () {\r\n                this.$refs['searchForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n\r\n                        this.tableData = [];\r\n\r\n                        this.size = [];\r\n\r\n                        this.tokyu = [];\r\n\r\n\r\n                        axios.get(url.syohinSizeTokyuPatternMaster)\r\n                            .then(response => {\r\n                                var Data = [];\r\n                                for (var i = 0; i < response.data.length; i++) {\r\n                                    if (response.data[i].syohinCD == this.model.selectedSyouhin) {\r\n                                        Data.push(response.data[i]);\r\n                                    }\r\n                                }\r\n                                for (var i = 0; i < Data.length; i++) {\r\n                                    var is_exsist = false;\r\n\r\n                                    for (var k = 0; k < this.tokyu.length; k++) {\r\n\r\n                                        if (this.tokyu[k].tokyu == Data[i].tokyu) {\r\n\r\n                                            is_exsist = true;\r\n\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                    if (!is_exsist) {\r\n\r\n                                        this.tokyu.push(Data[i]);\r\n                                        this.tokyuIndex[Data[i].tokyu] = this.tokyu.length - 1;\r\n\r\n\r\n                                    }\r\n\r\n                                }\r\n\r\n                                axios.get(url.syohinSizeTokyuPatternMaster)\r\n                                    .then(response => {\r\n                                        var Data = [];\r\n                                        for (var i = 0; i < response.data.length; i++) {\r\n                                            if (response.data[i].syohinCD == this.model.selectedSyouhin) {\r\n                                                Data.push(response.data[i]);\r\n                                            }\r\n                                        }\r\n\r\n                                        for (var i = 0; i < Data.length; i++) {\r\n\r\n                                            var is_exsist = false;\r\n                                            var size;\r\n                                            for (var k = 0; k < this.size.length; k++) {\r\n\r\n                                                if (this.size[k].size == Data[i].size) {\r\n\r\n                                                    is_exsist = true;\r\n                                                    size = this.size[k];\r\n\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                            if (is_exsist) {\r\n\r\n                                                size.tokyu.push(Data[i].tokyu);\r\n\r\n                                            } else {\r\n                                                var tokyu = Data[i].tokyu;\r\n\r\n                                                Data[i].tokyu = [tokyu];\r\n\r\n                                                this.size.push(Data[i]);\r\n\r\n                                            }\r\n                                        }\r\n\r\n                                        axios.get(url.SyohinHinsyuHosoPatternMaster)\r\n                                            .then(response => {\r\n                                                var Data = [];\r\n                                                for (var i = 0; i < response.data.length; i++) {\r\n                                                    if (response.data[i].syohinCD == this.model.selectedSyouhin) {\r\n                                                        Data.push(response.data[i]);\r\n                                                    }\r\n                                                }\r\n                                                this.housouPattern = Data;\r\n\r\n                                                this.createTableDataIndex();\r\n\r\n                                                var postArray = [\r\n                                                    { key: \"SyukkaDate\", value: this.model.nyuryokuDate },\r\n                                                    { key: \"SyouhinCode\", value: this.model.selectedSyouhin },\r\n                                                ]\r\n                                                var getUrl = url.createGetUrl(url.syukkayoteinyuryoku, postArray);\r\n\r\n                                                axios.get(getUrl)\r\n                                                    .then(response => {\r\n                                                        console.log(response.data);\r\n                                                        for (var i = 0; i < response.data.length; i++) {\r\n                                                            var data = response.data[i];\r\n\r\n                                                            this.tableDataIndex[data.chiku][data.shijyo][data.size][data.tokyu][data.hosoPattern] = i;\r\n\r\n                                                        }\r\n\r\n                                                        this.tableData = response.data;\r\n\r\n\r\n\r\n                                                        var getUrl = url.createGetUrl(url.zaikohyoji, [{ key: \"Syohincd\", value: this.model.selectedSyouhin }]);\r\n\r\n                                                        axios.get(getUrl)\r\n                                                            .then(response => {\r\n                                                                console.log(\"在庫\", response.data);\r\n\r\n                                                                this.zaiko = response.data;\r\n                                                            })\r\n                                                            .catch(response => console.log(response))\r\n\r\n\r\n                                                    })\r\n                                                    .catch(response => console.log(response))\r\n\r\n\r\n\r\n                                            })\r\n                                            .catch(response => console.log(response))\r\n\r\n\r\n\r\n                                    })\r\n                                    .catch(response => console.log(response))\r\n\r\n\r\n\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n\r\n\r\n\r\n\r\n                    }\r\n                });\r\n\r\n\r\n            },\r\n            getZaiko: function (size, tokyu) {\r\n\r\n                var firstIndex;\r\n                for (var i = 0; i < this.zaiko.length; i++) {\r\n\r\n                    if (size == this.zaiko[i].sizecd) {\r\n                        firstIndex = i;\r\n                    }\r\n                }\r\n\r\n                if (this.zaiko[firstIndex] == undefined) {\r\n                    return \"\";\r\n                }\r\n\r\n                var secondIndex;\r\n                for (var i = 0; i < this.zaiko[firstIndex].tokyuData.length; i++) {\r\n\r\n                    if (tokyu == this.zaiko[firstIndex].tokyuData[i].tokyucd) {\r\n                        secondIndex = i;\r\n                    }\r\n                }\r\n\r\n                if (firstIndex == undefined || secondIndex == undefined) {\r\n\r\n                    return \"データがありません\";\r\n                }\r\n\r\n                return this.zaiko[firstIndex].tokyuData[secondIndex].value;\r\n\r\n\r\n            },\r\n        },\r\n        created: function () {\r\n\r\n            this.model.nyuryokuDate = time.nowJapanDateInput();\r\n\r\n            axios.get(url.syouhinMaster)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        if (response.data[i].syohinCD == 0 || response.data[i].syohinCD == 1) {\r\n\r\n                            this.syouhin.push(response.data[i]);\r\n                        }\r\n                    }\r\n\r\n\r\n                })\r\n                .catch(response => {\r\n                    console.log(response)\r\n                }\r\n\r\n                )\r\n\r\n\r\n\r\n            axios.get(url.meisyoMaster)\r\n                .then(response => {\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        if (response.data[i].meisyoCD == \"7\") {\r\n                            this.chiku.push(response.data[i]);\r\n                        }\r\n                    }\r\n                    console.log(this.chiku);\r\n                })\r\n                .catch(response => console.log(response))\r\n\r\n            axios.get(url.shijoMaster)\r\n                .then(response => {\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n\r\n                        if (response.data[i].hyojiFlg == 1) {\r\n                            this.shijo.push(response.data[i]);\r\n                        }\r\n\r\n                    }\r\n\r\n                    for (var i = 0; i < this.shijo.length; i++) {\r\n                        this.$set(this.shijo[i], 'visible', true);\r\n                        this.shijoIndex[this.shijo[i].shijyoCD] = i;\r\n                    }\r\n                })\r\n                .catch(response => console.log(response))\r\n\r\n\r\n\r\n        },\r\n        watch: {\r\n\r\n\r\n        },\r\n    }\r\n</script>\r\n<style>\r\n\r\n    .unvisible {\r\n        display: none;\r\n    }\r\n</style>"]}]}