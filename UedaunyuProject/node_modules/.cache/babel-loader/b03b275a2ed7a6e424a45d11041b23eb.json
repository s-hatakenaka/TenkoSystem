{"remainingRequest":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\NiukeSyukei.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\NiukeSyukei.vue","mtime":1603716298000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1603716288000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716210000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716292000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport Card from '@/components/Card/Card.vue';\nimport KeyboardEvents from '@/components/KeyboardEvents.vue';\nimport AddMethods from '@/js/add/add.js';\nimport config from '@/config.js';\nimport time from '@/js/status/time.js';\nexport default {\n  name: 'niukeSyukei',\n  components: {\n    Card: Card,\n    KeyboardEvents: KeyboardEvents\n  },\n  data: function data() {\n    return {\n      //端末番号持ってくる\n      //methodsで使う際のnodeをmountedで登録し、取得する手間を省く\n      element: {\n        syoriKubun: null,\n        niukeNyuryokuForm: null\n      },\n      data: {\n        model: {\n          frequencyTop: 31,\n          frequencyBottom: 0\n        },\n        transactions: \"\",\n        validation: {\n          frequencyTop: [{\n            required: true,\n            message: '集計対象回数上限が入力されていません',\n            trigger: 'blur'\n          }],\n          frequencyBottom: [{\n            required: true,\n            message: '集計対象回数下限が入力されていません',\n            trigger: 'blur'\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    keyboardEvent: function keyboardEvent(e) {\n      if (e.keyCode == config.KEY_CODES.F9) {\n        this.submit();\n      }\n\n      if (e.keyCode == config.KEY_CODES.F12) {\n        this.finish();\n      }\n    },\n    finish: function finish() {\n      alert(\"終了\");\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.$refs['Form'].validate(function (valid) {\n        if (valid) {\n          if (!window.confirm(\"荷受集計を行います。よろしいですか？\")) {\n            return false;\n          }\n\n          axios.post('http://52.185.145.173:5001/api/Niukesyukei', {\n            Nyuryokutantocd: Number(_this.$store.state.login.userCode),\n            Nendo: Number(time.nowJapanYear()),\n            Kaisukagen: _this.data.frequencyBottom,\n            Kaisujyogen: _this.data.frequencyTop\n          }).then(function (response) {\n            colnsole.log(response);\n          }).catch(function (response) {\n            return console.log(response);\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    //Vueオブジェクトに要素の登録\n    AddMethods.add.elementRegisterByID(this, \"element\", [\"niukeSyukeiForm\"]);\n  }\n};",{"version":3,"sources":["NiukeSyukei.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA,OAAA,IAAA,MAAA,4BAAA;AACA,OAAA,cAAA,MAAA,iCAAA;AACA,OAAA,UAAA,MAAA,iBAAA;AACA,OAAA,MAAA,MAAA,aAAA;AACA,OAAA,IAAA,MAAA,qBAAA;AAGA,eAAA;AACA,QAAA,aADA;AAEA,cAAA;AACA,cADA;AACA;AADA,GAFA;AAKA,QAAA,gBAAA;AACA,WAAA;AACA;AACA;AACA,eAAA;AACA,oBAAA,IADA;AAEA,2BAAA;AAFA,OAHA;AAOA,YAAA;AACA,eAAA;AACA,wBAAA,EADA;AAEA,2BAAA;AAFA,SADA;AAKA,sBAAA,EALA;AAMA,oBAAA;AACA,wBAAA,CACA;AAAA,sBAAA,IAAA;AAAA,qBAAA,oBAAA;AAAA,qBAAA;AAAA,WADA,CADA;AAIA,2BAAA,CACA;AAAA,sBAAA,IAAA;AAAA,qBAAA,oBAAA;AAAA,qBAAA;AAAA,WADA;AAJA;AANA;AAPA,KAAA;AAwBA,GA9BA;AA+BA,WAAA;AACA,iBADA,yBACA,CADA,EACA;AACA,UAAA,EAAA,OAAA,IAAA,OAAA,SAAA,CAAA,EAAA,EAAA;AACA,aAAA,MAAA;AACA;;AACA,UAAA,EAAA,OAAA,IAAA,OAAA,SAAA,CAAA,GAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA,KARA;AASA,YAAA,kBAAA;AACA,YAAA,IAAA;AACA,KAXA;AAYA,YAAA,kBAAA;AAAA;;AAGA,WAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AAEA,YAAA,KAAA,EAAA;AAEA,cAAA,CAAA,OAAA,OAAA,CAAA,oBAAA,CAAA,EAAA;AAEA,mBAAA,KAAA;AACA;;AAGA,gBAAA,IAAA,CAAA,4CAAA,EAAA;AACA,6BAAA,OAAA,MAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CADA;AAEA,mBAAA,OAAA,KAAA,YAAA,EAAA,CAFA;AAGA,wBAAA,MAAA,IAAA,CAAA,eAHA;AAIA,yBAAA,MAAA,IAAA,CAAA;AAJA,WAAA,EAOA,IAPA,CAOA,oBAAA;AACA,qBAAA,GAAA,CAAA,QAAA;AACA,WATA,EAUA,KAVA,CAUA;AAAA,mBAAA,QAAA,GAAA,CAAA,QAAA,CAAA;AAAA,WAVA;AAYA;AACA,OAvBA;AA2BA;AA1CA,GA/BA;AA2EA,WAAA,mBAAA;AACA;AACA,eAAA,GAAA,CAAA,mBAAA,CAAA,IAAA,EAAA,SAAA,EAAA,CAAA,iBAAA,CAAA;AAEA;AA/EA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <keyboard-events v-on:keydown=\"keyboardEvent\"></keyboard-events>\r\n        <el-card>\r\n            <div slot='header'>\r\n                <span>荷受集計</span>\r\n            </div>\r\n            <div slot='default'>\r\n                <el-form :model=\"data.model\" :rules=\"data.validation\" ref=\"Form\" label-width=\"120px\">\r\n                    <div class=\"row\">\r\n                        <div class='col-md-12'>\r\n                            <label for='集計対象回数' class='col-form-label px-1' style='width:100%;'>集計対象回数</label>\r\n                            <el-form-item label-width=\"0\" prop=\"frequencyBottom\" style='width:30%;margin-right:2%; float:left;'>\r\n                                <el-input-number type='text'\r\n                                                 style=\"width:100%;\"\r\n                                                 v-model='data.model.frequencyBottom'\r\n                                                 :max=\"data.model.frequencyTop\"></el-input-number>\r\n                            </el-form-item>\r\n                            <span style='margin-right:2%; margin-top:0.5%;display:block;float:left;'>から</span>\r\n                            <el-form-item label-width=\"0\" prop=\"frequencyTop\" style='width:30%;margin-right:2%; float:left;'>\r\n                                <el-input-number type='text'\r\n                                                 style=\"width:100%;\"\r\n                                                 v-model='data.model.frequencyTop'\r\n                                                 :min=\"data.model.frequencyBottom\"></el-input-number>\r\n                            </el-form-item>\r\n                            <span style=\"margin-top: 0.5%;float:left;display:block;\">まで</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class='row'>\r\n                        <div class='col-md-6'>\r\n                            <label for='処理件数' class='col-form-label px-1' style=\"width:100%;\">処理件数</label>\r\n                            <el-input id=\"syouhinName\"\r\n                                      type='text'\r\n                                      style='width:80%;margin-right:2%;'\r\n                                      v-model=\"data.transactions\"\r\n                                      readonly></el-input>\r\n\r\n                            <span>件</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </el-form>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div style='text-align:right;width:100%;'>\r\n                            <el-button style='margin-left:2%;' type='primary' v-on:click=\"submit\">実行(F9)</el-button>\r\n                            <el-button type='success' v-on:click=\"finish\">終了(F12)</el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // @ is an alias to /src\r\n    import Card from '@/components/Card/Card.vue'\r\n    import KeyboardEvents from '@/components/KeyboardEvents.vue'\r\n    import AddMethods from '@/js/add/add.js'\r\n    import config from '@/config.js'\r\n    import time from '@/js/status/time.js'\r\n\r\n\r\n    export default {\r\n        name: 'niukeSyukei',\r\n        components: {\r\n            Card, KeyboardEvents\r\n        },\r\n        data: function () {\r\n            return {\r\n                //端末番号持ってくる\r\n                //methodsで使う際のnodeをmountedで登録し、取得する手間を省く\r\n                element: {\r\n                    syoriKubun: null,\r\n                    niukeNyuryokuForm: null,\r\n                },\r\n                data: {\r\n                    model: {\r\n                        frequencyTop: 31,\r\n                        frequencyBottom: 0,\r\n                    },\r\n                    transactions: \"\",\r\n                    validation: {\r\n                        frequencyTop: [\r\n                            { required: true, message: '集計対象回数上限が入力されていません', trigger: 'blur' },\r\n                        ],\r\n                        frequencyBottom: [\r\n                            { required: true, message: '集計対象回数下限が入力されていません', trigger: 'blur' },\r\n                        ]\r\n                    }\r\n\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            keyboardEvent(e) {\r\n                if (e.keyCode == config.KEY_CODES.F9) {\r\n                    this.submit()\r\n                }\r\n                if (e.keyCode == config.KEY_CODES.F12) {\r\n                    this.finish()\r\n                }\r\n            },\r\n            finish: function () {\r\n                alert(\"終了\");\r\n            },\r\n            submit: function () {\r\n\r\n\r\n                this.$refs['Form'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        if (!window.confirm(\"荷受集計を行います。よろしいですか？\")) {\r\n\r\n                            return false;\r\n                        }\r\n\r\n\r\n                        axios.post('http://52.185.145.173:5001/api/Niukesyukei', {\r\n                            Nyuryokutantocd:Number(this.$store.state.login.userCode),\r\n                            Nendo: Number(time.nowJapanYear()),\r\n                            Kaisukagen: this.data.frequencyBottom,\r\n                            Kaisujyogen: this.data.frequencyTop,\r\n\r\n                        })\r\n                            .then(response => {\r\n                                colnsole.log(response);\r\n                            })\r\n                            .catch(response => console.log(response))\r\n\r\n                    }\r\n                });\r\n\r\n\r\n\r\n            },\r\n        },\r\n        mounted: function () {\r\n            //Vueオブジェクトに要素の登録\r\n            AddMethods.add.elementRegisterByID(this, \"element\", [\"niukeSyukeiForm\"]);\r\n\r\n        },\r\n\r\n    }\r\n</script>\r\n"],"sourceRoot":"src/pages"}]}