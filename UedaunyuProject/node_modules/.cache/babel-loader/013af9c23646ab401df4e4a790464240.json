{"remainingRequest":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\src\\pages\\Login.vue","mtime":1603716298000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1603716288000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\babel-loader\\lib\\index.js","mtime":1603716210000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1603716214000},{"path":"G:\\仕事\\TenkoSystem\\UedaunyuProject\\node_modules\\vue-loader\\lib\\index.js","mtime":1603716292000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport login from '@/js/status/login.js';\nimport url from '@/js/api_url.js';\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      login: {\n        companyID: \"\",\n        memberID: \"\",\n        password: \"\"\n      },\n      validation: {\n        companyID: [{\n          required: true,\n          message: '会社IDが入力されていません',\n          trigger: 'blur'\n        }],\n        memberID: [{\n          required: true,\n          message: '社員IDが入力されていません',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'パスワードが入力されていません',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$refs['loginForm'].validate(function (valid) {\n        if (valid) {\n          _this.$router.push('/uedaunyu/'); //※ログイン未実装\n          //this.loginCheck();\n\n        }\n      });\n    },\n    loginCheck: function loginCheck() {\n      var _this2 = this;\n\n      //urlは違うやつ\n      axios.get(url.tantoMaster).then(function (response) {\n        var loginUser;\n\n        for (var i = 0; i < response.data.length; i++) {\n          var user = response.data[i];\n\n          if (user.tantocd == _this2.login.code && user.password == _this2.login.password) {\n            loginUser = user;\n          }\n        }\n\n        if (loginUser != undefined) {\n          login.login(_this2, {\n            userCode: loginUser.tantocd,\n            userName: loginUser.tantomei,\n            userPass: loginUser.password,\n            role: loginUser.kengen,\n            kaisu: loginUser.kaisu,\n            loggedIn: true\n          });\n\n          _this2.$router.push('/hoshigaki/');\n        } else {\n          _this2.$message({\n            message: '担当者コード又はパスワードが違います',\n            type: 'error'\n          });\n\n          return false;\n        }\n      }).catch(function (response) {\n        _this2.$message({\n          message: '通信に失敗しました',\n          type: 'error'\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,KAAA,MAAA,sBAAA;AACA,OAAA,GAAA,MAAA,iBAAA;AAEA,eAAA;AACA,QAAA,OADA;AAEA,QAAA,gBAAA;AAEA,WAAA;AACA,aAAA;AACA,mBAAA,EADA;AAEA,kBAAA,EAFA;AAGA,kBAAA;AAHA,OADA;AAMA,kBAAA;AACA,mBAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,gBAAA;AAAA,mBAAA;AAAA,SADA,CADA;AAIA,kBAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,gBAAA;AAAA,mBAAA;AAAA,SADA,CAJA;AAOA,kBAAA,CACA;AAAA,oBAAA,IAAA;AAAA,mBAAA,iBAAA;AAAA,mBAAA;AAAA,SADA;AAPA;AANA,KAAA;AAkBA,GAtBA;AAuBA,WAAA;AACA,gBAAA,sBAAA;AAAA;;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AAEA,YAAA,KAAA,EAAA;AAEA,gBAAA,OAAA,CAAA,IAAA,CAAA,YAAA,EAFA,CAGA;AACA;;AACA;AACA,OARA;AAUA,KAZA;AAaA,gBAAA,sBAAA;AAAA;;AAEA;AACA,YAAA,GAAA,CAAA,IAAA,WAAA,EACA,IADA,CACA,oBAAA;AAEA,YAAA,SAAA;;AAEA,aAAA,IAAA,IAAA,CAAA,EAAA,IAAA,SAAA,IAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AAEA,cAAA,OAAA,SAAA,IAAA,CAAA,CAAA,CAAA;;AAGA,cAAA,KAAA,OAAA,IAAA,OAAA,KAAA,CAAA,IAAA,IAAA,KAAA,QAAA,IAAA,OAAA,KAAA,CAAA,QAAA,EAAA;AAEA,wBAAA,IAAA;AACA;AAEA;;AAGA,YAAA,aAAA,SAAA,EAAA;AAEA,gBAAA,KAAA,CAAA,MAAA,EAAA;AAAA,sBAAA,UAAA,OAAA;AAAA,sBAAA,UAAA,QAAA;AAAA,sBAAA,UAAA,QAAA;AAAA,kBAAA,UAAA,MAAA;AAAA,mBAAA,UAAA,KAAA;AAAA,sBAAA;AAAA,WAAA;;AAEA,iBAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA,SALA,MAKA;AACA,iBAAA,QAAA,CAAA;AACA,qBAAA,oBADA;AAEA,kBAAA;AAFA,WAAA;;AAKA,iBAAA,KAAA;AACA;AACA,OA/BA,EAgCA,KAhCA,CAgCA,oBAAA;AACA,eAAA,QAAA,CAAA;AACA,mBAAA,WADA;AAEA,gBAAA;AAFA,SAAA;AAKA,OAtCA;AAwCA;AAxDA;AAvBA,CAAA","sourcesContent":["<template>\r\n\r\n    <el-card>\r\n        <div slot='header'>\r\n            <span>ログイン</span>\r\n        </div>\r\n        <div slot='default'>\r\n            <el-form :model=\"login\" :rules=\"validation\" ref=\"loginForm\" label-width=\"120px\" class=\"demo-ruleForm\">\r\n                <div class='row'>\r\n                    <div class='col-md-12'>\r\n                        <el-form-item label=\"会社ID\" prop=\"companyID\">\r\n                            <el-input v-model=\"login.companyID\"\r\n                                      style=\"width:40%;\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                    <div class='col-md-12'>\r\n                        <el-form-item label=\"社員ID\" prop=\"memberID\">\r\n                            <el-input v-model=\"login.memberID\"\r\n                                      style=\"width:40%;\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                    <div class='col-md-12'>\r\n                        <el-form-item label=\"パスワード\" prop=\"password\">\r\n                            <el-input v-model=\"login.password\"\r\n                                      style=\"width:40%;\"></el-input>\r\n                        </el-form-item>\r\n                    </div>\r\n                </div>\r\n            </el-form>\r\n\r\n            <div class='row'>\r\n                <div class='col-md-12'>\r\n                    <div style='text-align:right;width:100%;'>\r\n                        <el-button style='margin-right:3%;' type='primary' @click=\"submitForm()\">ログイン</el-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </el-card>\r\n\r\n</template>\r\n\r\n<script>\r\n    import login from '@/js/status/login.js'\r\n    import url from '@/js/api_url.js'\r\n\r\n    export default {\r\n        name: 'login',\r\n        data: function () {\r\n\r\n            return {\r\n                login: {\r\n                    companyID: \"\",\r\n                    memberID: \"\",\r\n                    password: \"\",\r\n                },\r\n                validation: {\r\n                    companyID: [\r\n                        { required: true, message: '会社IDが入力されていません', trigger: 'blur' },\r\n                    ],\r\n                    memberID: [\r\n                        { required: true, message: '社員IDが入力されていません', trigger: 'blur' },\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: 'パスワードが入力されていません', trigger: 'blur' },\r\n                    ],\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            submitForm: function () {\r\n                this.$refs['loginForm'].validate((valid) => {\r\n\r\n                    if (valid) {\r\n\r\n                        this.$router.push('/uedaunyu/');  \r\n                        //※ログイン未実装\r\n                        //this.loginCheck();\r\n                    } \r\n                });\r\n\r\n            },\r\n            loginCheck: function () {\r\n\r\n                //urlは違うやつ\r\n                axios.get(url.tantoMaster)\r\n                    .then(response => {\r\n\r\n                        var loginUser\r\n\r\n                        for (var i = 0; i < response.data.length; i++) {\r\n\r\n                            var user = response.data[i];\r\n\r\n\r\n                            if (user.tantocd == this.login.code && user.password == this.login.password) {\r\n\r\n                                loginUser = user;\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                        if (loginUser != undefined) {\r\n\r\n                            login.login(this, { userCode: loginUser.tantocd, userName: loginUser.tantomei, userPass: loginUser.password, role: loginUser.kengen, kaisu: loginUser.kaisu, loggedIn: true });\r\n\r\n                            this.$router.push('/hoshigaki/');\r\n                        } else {\r\n                            this.$message({\r\n                                message: '担当者コード又はパスワードが違います',\r\n                                type: 'error'\r\n                            });\r\n\r\n                            return false;\r\n                        }\r\n                    })\r\n                    .catch(response => {\r\n                        this.$message({\r\n                            message: '通信に失敗しました',\r\n                            type: 'error'\r\n                        });\r\n\r\n                    })\r\n                \r\n            }\r\n        },\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/pages"}]}